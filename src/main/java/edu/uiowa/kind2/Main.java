/*
 * Copyright (C) 2019  The University of Iowa
 * @author Mudathir Mohamed
 */


package edu.uiowa.kind2;

import java.io.IOException;
import java.net.URISyntaxException;
import java.nio.file.Files;
import java.nio.file.Paths;

public class Main
{
    public static void main(String args[])
    {
        Kind2Result.setPrintingCounterExamplesEnabled(true);
        Kind2Result.setPrintingUnknownCounterExamplesEnabled(true);
        Kind2Result.setPrintingLineNumbersEnabled(true);
        Kind2Result.setOpeningSymbols("{{");
        Kind2Result.setClosingSymbols("}}");

        if (args.length > 0)
        {
            try
            {
                String json = new String(Files.readAllBytes(Paths.get(args[0])));
                Kind2Result result = Kind2Result.analyzeJsonResult(json);
                System.out.println(result.toString());
            }
            catch (IOException e)
            {
            }
        }
        else
        {
            System.out.println("Usage: java -jar Kind2JavaClient.jar file.json");
        }
    }


    public static String s1()
    {
        String json = "[{'objectType': 'kind2Options', 'enabled': ['bmc', 'ind', 'ind2', 'ic3', 'invgents', 'invgenos', 'invgenintos', 'invgenintos'], 'timeout': 0.0, 'bmcMax': 0, 'compositional': True, 'modular': True}, {'objectType': 'log', 'level': 'info', 'source': 'parse', 'value': 'kind2 v1.1.0-482-gd69f383a'}, {'objectType': 'log', 'level': 'note', 'source': 'parse', 'value': 'System HasHappened has no property, skipping verification step.'}, {'objectType': 'analysisStart', 'top': 'Control', 'concrete': ['HasHappened'], 'abstract': [], 'assumptions': [['HasHappened', 1]]}, {'objectType': 'property', 'name': 'ControlSpec[l117c12].R1: Until the access code is first set, the door cannot be unlocked[1]', 'scope': 'Control', 'line': 94, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.042}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'ControlSpec[l117c12].R2: unlock request is granted whenever the provided code equals the current one[2]', 'scope': 'Control', 'line': 99, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.042}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'ControlSpec[l117c12].R3: An unlock request is granted only if the provided code equals the current access code[3]', 'scope': 'Control', 'line': 102, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.042}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'ControlSpec[l117c12].R4: Once it has been set, the current code can change only when the master key is inserted[4]', 'scope': 'Control', 'line': 106, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.042}, 'answer': {'source': 'ic3', 'value': 'valid'}}, {'objectType': 'property', 'name': 'ControlSpec[l117c12].R5: Unlocking granted only if there is a request and the master key is not inserted[5]', 'scope': 'Control', 'line': 109, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.042}, 'answer': {'source': 'ic3', 'value': 'valid'}}, {'objectType': 'analysisStop'}, {'objectType': 'analysisStart', 'top': 'Keypad', 'concrete': [], 'abstract': [], 'assumptions': [['Control', 1], ['HasHappened', 1]]}, {'objectType': 'property', 'name': 'KeypadSpec[l54c12].R3: Code is always non-negative[3]', 'scope': 'Keypad', 'line': 44, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.043}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'KeypadSpec[l54c12].R1: The component will not send an unlock requests before its third cycle[1]', 'scope': 'Keypad', 'line': 38, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.043}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'KeypadSpec[l54c12].R4: Whenever there is a request a digit is pressed[4]', 'scope': 'Keypad', 'line': 47, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.043}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'KeypadSpec[l54c12].R2: Any two distinct unlock requests are separated by at least 2 clock cycles[2]', 'scope': 'Keypad', 'line': 41, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.053}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'analysisStop'}, {'objectType': 'log', 'level': 'note', 'source': 'parse', 'value': 'System Since has no property, skipping verification step.'}, {'objectType': 'analysisStart', 'top': 'Lock', 'concrete': ['Since', 'HasHappened'], 'abstract': ['Keypad', 'Control'], 'assumptions': [['Since', 1]]}, {'objectType': 'property', 'name': 'Keypad[l162c20].A1: Digit is always non-negative[1]', 'scope': 'Keypad', 'line': 29, 'column': 2, 'source': 'Assumption', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.042}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'LockSpec[l158c12].R2: Door locks remains locked as long as no one uses the keypad[2]', 'scope': 'Lock', 'line': 150, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.124}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'Control[l164c27].A1: Code is always non-negative[1]', 'scope': 'Control', 'line': 91, 'column': 2, 'source': 'Assumption', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.124}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'LockSpec[l158c12].R1: The door will never be held open for more than 4 clock cycles at a time[1]', 'scope': 'Lock', 'line': 145, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.204}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'analysisStop'}]";
        return json;
    }

    public static String s2()
    {
        String json = "[{'objectType': 'kind2Options', 'enabled': ['bmc', 'ind', 'ind2', 'ic3', 'invgents', 'invgenos', 'invgenintos', 'invgenintos'], 'timeout': 5.0, 'bmcMax': 0, 'compositional': True, 'modular': True}, {'objectType': 'log', 'level': 'info', 'source': 'parse', 'value': 'kind2 v1.1.0-486-g3e68273a'}, {'objectType': 'analysisStart', 'top': 'Control', 'concrete': [], 'abstract': [], 'assumptions': []}, {'objectType': 'property', 'name': 'ControlSpec[l101c12].guarantee[l94c2][1]', 'scope': 'Control', 'line': 94, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.023}, 'answer': {'source': 'ic3', 'value': 'valid'}}, {'objectType': 'analysisStop'}, {'objectType': 'analysisStart', 'top': 'Keypad', 'concrete': [], 'abstract': [], 'assumptions': [['Control', 1]]}, {'objectType': 'property', 'name': 'KeypadSpec[l54c12].R3: Code is always non-negative[3]', 'scope': 'Keypad', 'line': 44, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.042}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'KeypadSpec[l54c12].R4: Whenever there is a request a digit is pressed[4]', 'scope': 'Keypad', 'line': 47, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.042}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'KeypadSpec[l54c12].R1: The component will not send an unlock requests before its third cycle[1]', 'scope': 'Keypad', 'line': 38, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.042}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'KeypadSpec[l54c12].R2: Any two distinct unlock requests are separated by at least 2 clock cycles[2]', 'scope': 'Keypad', 'line': 41, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.053}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'analysisStop'}, {'objectType': 'log', 'level': 'note', 'source': 'parse', 'value': 'System Since has no property, skipping verification step.'}, {'objectType': 'analysisStart', 'top': 'Lock', 'concrete': ['Since'], 'abstract': ['Keypad', 'Control'], 'assumptions': [['Since', 1]]}, {'objectType': 'property', 'name': 'Keypad[l146c20].A1: Digit is always non-negative[1]', 'scope': 'Keypad', 'line': 29, 'column': 2, 'source': 'Assumption', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.043}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'LockSpec[l142c12].R2: Door locks remains locked as long as no one uses the keypad[2]', 'scope': 'Lock', 'line': 134, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.043}, 'k': 6, 'answer': {'source': 'bmc', 'value': 'falsifiable'}, 'counterExample': [{'blockType': 'node', 'name': 'Lock', 'streams': [{'name': 'Digit', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0], [1, 0], [2, 0], [3, 0], [4, 0], [5, 0], [6, 0]]}, {'name': 'Press', 'type': 'bool', 'class': 'input', 'instantValues': [[0, True], [1, True], [2, True], [3, True], [4, False], [5, True], [6, False]]}, {'name': 'MasterKey', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False], [1, False], [2, False], [3, False], [4, False], [5, False], [6, False]]}, {'name': 'Unlocking', 'type': 'bool', 'class': 'output', 'instantValues': [[0, False], [1, True], [2, True], [3, True], [4, True], [5, False], [6, True]]}, {'name': 'Timer', 'type': 'int', 'class': 'local', 'instantValues': [[0, 0], [1, 4], [2, 3], [3, 2], [4, 1], [5, 0], [6, 4]]}, {'name': 'Granted', 'type': 'bool', 'class': 'local', 'instantValues': [[0, False], [1, True], [2, False], [3, False], [4, True], [5, True], [6, True]]}, {'name': 'Request', 'type': 'bool', 'class': 'local', 'instantValues': [[0, False], [1, False], [2, False], [3, False], [4, False], [5, False], [6, False]]}, {'name': 'Code', 'type': 'int', 'class': 'local', 'instantValues': [[0, 0], [1, 0], [2, 0], [3, 0], [4, 0], [5, 0], [6, 0]]}], 'subnodes': [{'blockType': 'node', 'name': 'Since', 'streams': [{'name': 'X', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False], [1, False], [2, False], [3, False], [4, False], [5, True], [6, False]]}, {'name': 'Y', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False], [1, False], [2, False], [3, False], [4, True], [5, False], [6, True]]}, {'name': 'SinceXY', 'type': 'bool', 'class': 'output', 'instantValues': [[0, False], [1, False], [2, False], [3, False], [4, False], [5, True], [6, True]]}]}, {'blockType': 'node', 'name': 'Keypad', 'streams': [{'name': 'Digit', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0], [1, 0], [2, 0], [3, 0], [4, 0], [5, 0], [6, 0]]}, {'name': 'Press', 'type': 'bool', 'class': 'input', 'instantValues': [[0, True], [1, True], [2, True], [3, True], [4, False], [5, True], [6, False]]}, {'name': 'Request', 'type': 'bool', 'class': 'output', 'instantValues': [[0, False], [1, False], [2, False], [3, False], [4, False], [5, False], [6, False]]}, {'name': 'Code', 'type': 'int', 'class': 'output', 'instantValues': [[0, 0], [1, 0], [2, 0], [3, 0], [4, 0], [5, 0], [6, 0]]}]}, {'blockType': 'node', 'name': 'Control', 'streams': [{'name': 'Request', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False], [1, False], [2, False], [3, False], [4, False], [5, False], [6, False]]}, {'name': 'Code', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0], [1, 0], [2, 0], [3, 0], [4, 0], [5, 0], [6, 0]]}, {'name': 'MasterKey', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False], [1, False], [2, False], [3, False], [4, False], [5, False], [6, False]]}, {'name': 'CurrentCode', 'type': 'int', 'class': 'output', 'instantValues': [[0, 0], [1, 0], [2, 0], [3, 0], [4, 0], [5, 0], [6, 0]]}, {'name': 'Granted', 'type': 'bool', 'class': 'output', 'instantValues': [[0, False], [1, True], [2, False], [3, False], [4, True], [5, True], [6, True]]}]}]}]}, {'objectType': 'property', 'name': 'Control[l148c27].A1: Code is always non-negative[1]', 'scope': 'Control', 'line': 91, 'column': 2, 'source': 'Assumption', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.105}, 'answer': {'source': 'invgenos', 'value': 'valid'}}, {'objectType': 'property', 'name': 'LockSpec[l142c12].R1: The door will never be held open for more than 4 clock cycles at a time[1]', 'scope': 'Lock', 'line': 129, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.137}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'analysisStop'}, {'objectType': 'analysisStart', 'top': 'Lock', 'concrete': ['Since', 'Keypad'], 'abstract': ['Control'], 'assumptions': [['Control', 1], ['Keypad', 1], ['Lock', 1], ['Since', 1]]}, {'objectType': 'property', 'name': 'LockSpec[l142c12].R2: Door locks remains locked as long as no one uses the keypad[2]', 'scope': 'Lock', 'line': 134, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.053}, 'k': 6, 'answer': {'source': 'bmc', 'value': 'falsifiable'}, 'counterExample': [{'blockType': 'node', 'name': 'Lock', 'streams': [{'name': 'Digit', 'type': 'int', 'class': 'input', 'instantValues': [[0, 282], [1, 283], [2, 818], [3, 7721], [4, 281], [5, 8945], [6, 0]]}, {'name': 'Press', 'type': 'bool', 'class': 'input', 'instantValues': [[0, True], [1, False], [2, False], [3, False], [4, False], [5, True], [6, False]]}, {'name': 'MasterKey', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False], [1, False], [2, False], [3, False], [4, False], [5, False], [6, False]]}, {'name': 'Unlocking', 'type': 'bool', 'class': 'output', 'instantValues': [[0, False], [1, True], [2, True], [3, True], [4, True], [5, False], [6, True]]}, {'name': 'Timer', 'type': 'int', 'class': 'local', 'instantValues': [[0, 0], [1, 4], [2, 3], [3, 2], [4, 1], [5, 0], [6, 4]]}, {'name': 'Granted', 'type': 'bool', 'class': 'local', 'instantValues': [[0, False], [1, True], [2, True], [3, True], [4, False], [5, True], [6, True]]}, {'name': 'Request', 'type': 'bool', 'class': 'local', 'instantValues': [[0, False], [1, False], [2, False], [3, False], [4, False], [5, False], [6, False]]}, {'name': 'Code', 'type': 'int', 'class': 'local', 'instantValues': [[0, 282], [1, 282], [2, 282], [3, 282], [4, 282], [5, 11765], [6, 11765]]}], 'subnodes': [{'blockType': 'node', 'name': 'Since', 'streams': [{'name': 'X', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False], [1, False], [2, False], [3, False], [4, False], [5, True], [6, False]]}, {'name': 'Y', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False], [1, True], [2, True], [3, True], [4, True], [5, False], [6, True]]}, {'name': 'SinceXY', 'type': 'bool', 'class': 'output', 'instantValues': [[0, False], [1, False], [2, False], [3, False], [4, False], [5, True], [6, True]]}]}, {'blockType': 'node', 'name': 'Keypad', 'streams': [{'name': 'Digit', 'type': 'int', 'class': 'input', 'instantValues': [[0, 282], [1, 283], [2, 818], [3, 7721], [4, 281], [5, 8945], [6, 0]]}, {'name': 'Press', 'type': 'bool', 'class': 'input', 'instantValues': [[0, True], [1, False], [2, False], [3, False], [4, False], [5, True], [6, False]]}, {'name': 'Request', 'type': 'bool', 'class': 'output', 'instantValues': [[0, False], [1, False], [2, False], [3, False], [4, False], [5, False], [6, False]]}, {'name': 'Code', 'type': 'int', 'class': 'output', 'instantValues': [[0, 282], [1, 282], [2, 282], [3, 282], [4, 282], [5, 11765], [6, 11765]]}, {'name': 'PressedDigits', 'type': 'int', 'class': 'local', 'instantValues': [[0, 1], [1, 1], [2, 1], [3, 1], [4, 1], [5, 2], [6, 2]]}, {'name': 'ElapsedTime', 'type': 'int', 'class': 'local', 'instantValues': [[0, 0], [1, 1], [2, 2], [3, 3], [4, 4], [5, 0], [6, 1]]}, {'name': 'ExpirationTime', 'type': 'subrange [9, 9] of int', 'class': 'local', 'instantValues': [[0, 9], [1, 9], [2, 9], [3, 9], [4, 9], [5, 9], [6, 9]]}, {'name': 'IncompleteCode', 'type': 'bool', 'class': 'local', 'instantValues': [[0, False], [1, True], [2, True], [3, True], [4, True], [5, True], [6, True]]}]}, {'blockType': 'node', 'name': 'Control', 'streams': [{'name': 'Request', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False], [1, False], [2, False], [3, False], [4, False], [5, False], [6, False]]}, {'name': 'Code', 'type': 'int', 'class': 'input', 'instantValues': [[0, 282], [1, 282], [2, 282], [3, 282], [4, 282], [5, 11765], [6, 11765]]}, {'name': 'MasterKey', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False], [1, False], [2, False], [3, False], [4, False], [5, False], [6, False]]}, {'name': 'CurrentCode', 'type': 'int', 'class': 'output', 'instantValues': [[0, 0], [1, 0], [2, 0], [3, 0], [4, 0], [5, 0], [6, 0]]}, {'name': 'Granted', 'type': 'bool', 'class': 'output', 'instantValues': [[0, False], [1, True], [2, True], [3, True], [4, False], [5, True], [6, True]]}]}]}]}, {'objectType': 'analysisStop'}, {'objectType': 'analysisStart', 'top': 'Lock', 'concrete': ['Since', 'Keypad', 'Control'], 'abstract': [], 'assumptions': [['Control', 1], ['Keypad', 1], ['Lock', 1], ['Since', 1]]}, {'objectType': 'property', 'name': 'LockSpec[l142c12].R2: Door locks remains locked as long as no one uses the keypad[2]', 'scope': 'Lock', 'line': 134, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.033}, 'answer': {'source': 'ind2', 'value': 'valid'}}, {'objectType': 'analysisStop'}]";
        return json;
    }

    public static String s2b()
    {
        String json = "[{'objectType': 'kind2Options', 'enabled': ['bmc', 'ind', 'ind2', 'ic3', 'invgents', 'invgenos', 'invgenintos', 'invgenintos'], 'timeout': 0.0, 'bmcMax': 0, 'compositional': True, 'modular': True}, {'objectType': 'log', 'level': 'info', 'source': 'parse', 'value': 'kind2 v1.1.0-482-gd69f383a'}, {'objectType': 'log', 'level': 'note', 'source': 'parse', 'value': 'System HasHappened has no property, skipping verification step.'}, {'objectType': 'analysisStart', 'top': 'Control', 'concrete': ['HasHappened'], 'abstract': [], 'assumptions': [['HasHappened', 1]]}, {'objectType': 'property', 'name': 'ControlSpec[l117c12].R1: Until the access code is first set, the door cannot be unlocked[1]', 'scope': 'Control', 'line': 94, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.032}, 'answer': {'source': 'ic3', 'value': 'valid'}}, {'objectType': 'property', 'name': 'ControlSpec[l117c12].R2: unlock request is granted whenever the provided code equals the current one[2]', 'scope': 'Control', 'line': 99, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.032}, 'answer': {'source': 'ic3', 'value': 'valid'}}, {'objectType': 'property', 'name': 'ControlSpec[l117c12].R3: An unlock request is granted only if the provided code equals the current access code[3]', 'scope': 'Control', 'line': 102, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.032}, 'answer': {'source': 'ic3', 'value': 'valid'}}, {'objectType': 'property', 'name': 'ControlSpec[l117c12].R4: Once it has been set, the current code can change only when the master key is inserted[4]', 'scope': 'Control', 'line': 106, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.032}, 'answer': {'source': 'ic3', 'value': 'valid'}}, {'objectType': 'property', 'name': 'ControlSpec[l117c12].R5: Unlocking granted only if there is a request and the master key is not inserted[5]', 'scope': 'Control', 'line': 109, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.032}, 'answer': {'source': 'ic3', 'value': 'valid'}}, {'objectType': 'analysisStop'}, {'objectType': 'analysisStart', 'top': 'Keypad', 'concrete': [], 'abstract': [], 'assumptions': [['Control', 1], ['HasHappened', 1]]}, {'objectType': 'property', 'name': 'KeypadSpec[l54c12].R1: The component will not send an unlock requests before its third cycle[1]', 'scope': 'Keypad', 'line': 38, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.042}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'KeypadSpec[l54c12].R2: Any two distinct unlock requests are separated by at least 2 clock cycles[2]', 'scope': 'Keypad', 'line': 41, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.052}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'KeypadSpec[l54c12].R3: Code is always non-negative[3]', 'scope': 'Keypad', 'line': 44, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.052}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'analysisStop'}, {'objectType': 'log', 'level': 'note', 'source': 'parse', 'value': 'System Since has no property, skipping verification step.'}, {'objectType': 'analysisStart', 'top': 'Lock', 'concrete': ['Since', 'HasHappened'], 'abstract': ['Keypad', 'Control'], 'assumptions': [['Since', 1]]}, {'objectType': 'property', 'name': 'Keypad[l162c20].A1: Digit is always non-negative[1]', 'scope': 'Keypad', 'line': 29, 'column': 2, 'source': 'Assumption', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.063}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'LockSpec[l158c12].R2: Door locks remains locked as long as no one uses the keypad[2]', 'scope': 'Lock', 'line': 150, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.073}, 'k': 9, 'answer': {'source': 'bmc', 'value': 'falsifiable'}, 'counterExample': [{'blockType': 'node', 'name': 'Lock', 'streams': [{'name': 'Digit', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0], [1, 0], [2, 0], [3, 0], [4, 0], [5, 0], [6, 0], [7, 0], [8, 0], [9, 0]]}, {'name': 'Press', 'type': 'bool', 'class': 'input', 'instantValues': [[0, True], [1, True], [2, False], [3, True], [4, True], [5, True], [6, True], [7, True], [8, True], [9, False]]}, {'name': 'MasterKey', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False], [1, True], [2, False], [3, False], [4, False], [5, False], [6, True], [7, True], [8, True], [9, False]]}, {'name': 'Unlocking', 'type': 'bool', 'class': 'output', 'instantValues': [[0, False], [1, False], [2, False], [3, False], [4, True], [5, True], [6, True], [7, True], [8, False], [9, True]]}, {'name': 'Timer', 'type': 'int', 'class': 'local', 'instantValues': [[0, 0], [1, 0], [2, 0], [3, 0], [4, 4], [5, 3], [6, 2], [7, 1], [8, 0], [9, 4]]}, {'name': 'Granted', 'type': 'bool', 'class': 'local', 'instantValues': [[0, False], [1, False], [2, False], [3, False], [4, True], [5, False], [6, False], [7, False], [8, False], [9, True]]}, {'name': 'Request', 'type': 'bool', 'class': 'local', 'instantValues': [[0, False], [1, True], [2, False], [3, False], [4, True], [5, False], [6, False], [7, False], [8, False], [9, True]]}, {'name': 'Code', 'type': 'int', 'class': 'local', 'instantValues': [[0, 2], [1, 2], [2, 3], [3, 2], [4, 2], [5, 2], [6, 0], [7, 2], [8, 0], [9, 0]]}], 'subnodes': [{'blockType': 'node', 'name': 'Since', 'streams': [{'name': 'X', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False], [1, False], [2, False], [3, False], [4, False], [5, False], [6, False], [7, False], [8, True], [9, False]]}, {'name': 'Y', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False], [1, False], [2, True], [3, False], [4, False], [5, False], [6, False], [7, False], [8, False], [9, True]]}, {'name': 'SinceXY', 'type': 'bool', 'class': 'output', 'instantValues': [[0, False], [1, False], [2, False], [3, False], [4, False], [5, False], [6, False], [7, False], [8, True], [9, True]]}]}, {'blockType': 'node', 'name': 'Keypad', 'streams': [{'name': 'Digit', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0], [1, 0], [2, 0], [3, 0], [4, 0], [5, 0], [6, 0], [7, 0], [8, 0], [9, 0]]}, {'name': 'Press', 'type': 'bool', 'class': 'input', 'instantValues': [[0, True], [1, True], [2, False], [3, True], [4, True], [5, True], [6, True], [7, True], [8, True], [9, False]]}, {'name': 'Request', 'type': 'bool', 'class': 'output', 'instantValues': [[0, False], [1, True], [2, False], [3, False], [4, True], [5, False], [6, False], [7, False], [8, False], [9, True]]}, {'name': 'Code', 'type': 'int', 'class': 'output', 'instantValues': [[0, 2], [1, 2], [2, 3], [3, 2], [4, 2], [5, 2], [6, 0], [7, 2], [8, 0], [9, 0]]}]}, {'blockType': 'node', 'name': 'Control', 'streams': [{'name': 'Request', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False], [1, True], [2, False], [3, False], [4, True], [5, False], [6, False], [7, False], [8, False], [9, True]]}, {'name': 'Code', 'type': 'int', 'class': 'input', 'instantValues': [[0, 2], [1, 2], [2, 3], [3, 2], [4, 2], [5, 2], [6, 0], [7, 2], [8, 0], [9, 0]]}, {'name': 'MasterKey', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False], [1, True], [2, False], [3, False], [4, False], [5, False], [6, True], [7, True], [8, True], [9, False]]}, {'name': 'CurrentCode', 'type': 'int', 'class': 'output', 'instantValues': [[0, 2], [1, 2], [2, 2], [3, 2], [4, 2], [5, 2], [6, 1], [7, 2], [8, 0], [9, 0]]}, {'name': 'Granted', 'type': 'bool', 'class': 'output', 'instantValues': [[0, False], [1, False], [2, False], [3, False], [4, True], [5, False], [6, False], [7, False], [8, False], [9, True]]}]}]}]}, {'objectType': 'property', 'name': 'Control[l164c27].A1: Code is always non-negative[1]', 'scope': 'Control', 'line': 91, 'column': 2, 'source': 'Assumption', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.136}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'LockSpec[l158c12].R1: The door will never be held open for more than 4 clock cycles at a time[1]', 'scope': 'Lock', 'line': 145, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.186}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'analysisStop'}, {'objectType': 'analysisStart', 'top': 'Lock', 'concrete': ['Since', 'Keypad', 'HasHappened'], 'abstract': ['Control'], 'assumptions': [['Control', 1], ['HasHappened', 1], ['Keypad', 1], ['Lock', 1], ['Since', 1]]}, {'objectType': 'property', 'name': 'LockSpec[l158c12].R2: Door locks remains locked as long as no one uses the keypad[2]', 'scope': 'Lock', 'line': 150, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.256}, 'answer': {'source': 'invgenos', 'value': 'valid'}}, {'objectType': 'analysisStop'}]";
        return json;
    }

    public static String s3()
    {
        String json = "[{'objectType': 'kind2Options', 'enabled': ['bmc', 'ind', 'ind2', 'ic3', 'invgents', 'invgenos', 'invgenintos', 'invgenintos'], 'timeout': 5.0, 'bmcMax': 0, 'compositional': True, 'modular': True}, {'objectType': 'log', 'level': 'info', 'source': 'parse', 'value': 'kind2 v1.1.0-486-g3e68273a'}, {'objectType': 'log', 'level': 'note', 'source': 'parse', 'value': 'System HasHappened has no property, skipping verification step.'}, {'objectType': 'analysisStart', 'top': 'Control', 'concrete': ['HasHappened'], 'abstract': [], 'assumptions': [['HasHappened', 1]]}, {'objectType': 'property', 'name': 'ControlSpec[l117c12].R2: unlock request is granted whenever the provided code equals the current one[2]', 'scope': 'Control', 'line': 99, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.042}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'ControlSpec[l117c12].R1: Until the access code is first set, the door cannot be unlocked[1]', 'scope': 'Control', 'line': 94, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.042}, 'answer': {'source': 'ic3', 'value': 'valid'}}, {'objectType': 'property', 'name': 'ControlSpec[l117c12].R3: An unlock request is granted only if the provided code equals the current access code[3]', 'scope': 'Control', 'line': 102, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.042}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'ControlSpec[l117c12].R4: Once it has been set, the current code can change only when the master key is inserted[4]', 'scope': 'Control', 'line': 106, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.042}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'ControlSpec[l117c12].R5: Unlocking granted only if there is a request and the master key is not inserted[5]', 'scope': 'Control', 'line': 109, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.042}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'analysisStop'}, {'objectType': 'analysisStart', 'top': 'Keypad', 'concrete': [], 'abstract': [], 'assumptions': [['Control', 1], ['HasHappened', 1]]}, {'objectType': 'log', 'level': 'warn', 'source': 'parse', 'value': 'BMC Initial state is unsat, the system has no reachable states.'}, {'objectType': 'property', 'name': 'KeypadSpec[l54c12].R4: Whenever there is a request a digit is pressed[4]', 'scope': 'Keypad', 'line': 47, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.023}, 'answer': {'source': 'bmc', 'value': 'valid'}}, {'objectType': 'property', 'name': 'KeypadSpec[l54c12].R3: Code is always non-negative[3]', 'scope': 'Keypad', 'line': 44, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.023}, 'answer': {'source': 'bmc', 'value': 'valid'}}, {'objectType': 'property', 'name': 'KeypadSpec[l54c12].R2: Any two distinct unlock requests are separated by at least 2 clock cycles[2]', 'scope': 'Keypad', 'line': 41, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.023}, 'answer': {'source': 'bmc', 'value': 'valid'}}, {'objectType': 'property', 'name': 'KeypadSpec[l54c12].R1: The component will not send an unlock requests before its third cycle[1]', 'scope': 'Keypad', 'line': 38, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.023}, 'answer': {'source': 'bmc', 'value': 'valid'}}, {'objectType': 'analysisStop'}, {'objectType': 'analysisStart', 'top': 'Lock', 'concrete': ['HasHappened'], 'abstract': ['Keypad', 'Control'], 'assumptions': [['Keypad', 1]]}, {'objectType': 'property', 'name': 'Control[l161c27].A1: Code is always non-negative[1]', 'scope': 'Control', 'line': 91, 'column': 2, 'source': 'Assumption', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.024}, 'k': 0, 'answer': {'source': 'ic3', 'value': 'falsifiable'}, 'counterExample': [{'blockType': 'node', 'name': 'Lock', 'streams': [{'name': 'Digit', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0]]}, {'name': 'Press', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False]]}, {'name': 'MasterKey', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False]]}, {'name': 'Unlocking', 'type': 'bool', 'class': 'output', 'instantValues': [[0, False]]}, {'name': 'Timer', 'type': 'int', 'class': 'local', 'instantValues': [[0, 0]]}, {'name': 'Granted', 'type': 'bool', 'class': 'local', 'instantValues': [[0, False]]}, {'name': 'Request', 'type': 'bool', 'class': 'local', 'instantValues': [[0, True]]}, {'name': 'Code', 'type': 'int', 'class': 'local', 'instantValues': [[0, -1]]}], 'subnodes': [{'blockType': 'node', 'name': 'Keypad', 'streams': [{'name': 'Digit', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0]]}, {'name': 'Press', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False]]}, {'name': 'Request', 'type': 'bool', 'class': 'output', 'instantValues': [[0, True]]}, {'name': 'Code', 'type': 'int', 'class': 'output', 'instantValues': [[0, -1]]}]}, {'blockType': 'node', 'name': 'Control', 'streams': [{'name': 'Request', 'type': 'bool', 'class': 'input', 'instantValues': [[0, True]]}, {'name': 'Code', 'type': 'int', 'class': 'input', 'instantValues': [[0, -1]]}, {'name': 'MasterKey', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False]]}, {'name': 'CurrentCode', 'type': 'int', 'class': 'output', 'instantValues': [[0, -2]]}, {'name': 'Granted', 'type': 'bool', 'class': 'output', 'instantValues': [[0, False]]}]}]}]}, {'objectType': 'property', 'name': 'Keypad[l159c20].A1: Digit is always non-negative[1]', 'scope': 'Keypad', 'line': 29, 'column': 2, 'source': 'Assumption', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.024}, 'k': 0, 'answer': {'source': 'ic3', 'value': 'falsifiable'}, 'counterExample': [{'blockType': 'node', 'name': 'Lock', 'streams': [{'name': 'Digit', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0]]}, {'name': 'Press', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False]]}, {'name': 'MasterKey', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False]]}, {'name': 'Unlocking', 'type': 'bool', 'class': 'output', 'instantValues': [[0, False]]}, {'name': 'Timer', 'type': 'int', 'class': 'local', 'instantValues': [[0, 0]]}, {'name': 'Granted', 'type': 'bool', 'class': 'local', 'instantValues': [[0, False]]}, {'name': 'Request', 'type': 'bool', 'class': 'local', 'instantValues': [[0, True]]}, {'name': 'Code', 'type': 'int', 'class': 'local', 'instantValues': [[0, -1]]}], 'subnodes': [{'blockType': 'node', 'name': 'Keypad', 'streams': [{'name': 'Digit', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0]]}, {'name': 'Press', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False]]}, {'name': 'Request', 'type': 'bool', 'class': 'output', 'instantValues': [[0, True]]}, {'name': 'Code', 'type': 'int', 'class': 'output', 'instantValues': [[0, -1]]}]}, {'blockType': 'node', 'name': 'Control', 'streams': [{'name': 'Request', 'type': 'bool', 'class': 'input', 'instantValues': [[0, True]]}, {'name': 'Code', 'type': 'int', 'class': 'input', 'instantValues': [[0, -1]]}, {'name': 'MasterKey', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False]]}, {'name': 'CurrentCode', 'type': 'int', 'class': 'output', 'instantValues': [[0, -2]]}, {'name': 'Granted', 'type': 'bool', 'class': 'output', 'instantValues': [[0, False]]}]}]}]}, {'objectType': 'property', 'name': 'LockSpec[l155c12].R1: The door will never be held open for more than 4 clock cycles at a time[1]', 'scope': 'Lock', 'line': 145, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.178}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'analysisStop'}]";
        return json;
    }

    public static String s3b()
    {
        String json = "[{'objectType': 'kind2Options', 'enabled': ['bmc', 'ind', 'ind2', 'ic3', 'invgents', 'invgenos', 'invgenintos', 'invgenintos'], 'timeout': 0.0, 'bmcMax': 0, 'compositional': True, 'modular': True}, {'objectType': 'log', 'level': 'info', 'source': 'parse', 'value': 'kind2 v1.1.0-482-gd69f383a'}, {'objectType': 'analysisStart', 'top': 'b', 'concrete': [], 'abstract': [], 'assumptions': []}, {'objectType': 'property', 'name': 'bSpec[l10c12].guarantee[l6c3][1]', 'scope': 'b', 'line': 6, 'column': 3, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.022}, 'answer': {'source': 'ic3', 'value': 'valid'}}, {'objectType': 'analysisStop'}, {'objectType': 'analysisStart', 'top': 'a', 'concrete': [], 'abstract': ['b'], 'assumptions': [['b', 1]]}, {'objectType': 'property', 'name': 'b[l24c12].assume[l5c3][1]', 'scope': 'b', 'line': 5, 'column': 3, 'source': 'Assumption', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.023}, 'k': 0, 'answer': {'source': 'ic3', 'value': 'falsifiable'}, 'counterExample': [{'blockType': 'node', 'name': 'a', 'streams': [{'name': 'input', 'type': 'int', 'class': 'input', 'instantValues': [[0, 1]]}, {'name': 'output', 'type': 'subrange [1, 1] of int', 'class': 'output', 'instantValues': [[0, 1]]}], 'subnodes': [{'blockType': 'node', 'name': 'b', 'streams': [{'name': 'input', 'type': 'int', 'class': 'input', 'instantValues': [[0, 1]]}, {'name': 'output', 'type': 'subrange [1, 1] of int', 'class': 'output', 'instantValues': [[0, 1]]}]}]}]}, {'objectType': 'property', 'name': 'aSpec[l22c12].guarantee[l18c3][1]', 'scope': 'a', 'line': 18, 'column': 3, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.023}, 'answer': {'source': 'ic3', 'value': 'valid'}}, {'objectType': 'analysisStop'}]";
        return json;
    }

    public static String s4()
    {
        String json = "[{'objectType': 'kind2Options', 'enabled': ['bmc', 'ind', 'ind2', 'ic3', 'invgents', 'invgenos', 'invgenintos', 'invgenintos'], 'timeout': 5.0, 'bmcMax': 0, 'compositional': True, 'modular': True}, {'objectType': 'log', 'level': 'info', 'source': 'parse', 'value': 'kind2 v1.1.0-486-g3e68273a'}, {'objectType': 'log', 'level': 'note', 'source': 'parse', 'value': 'System HasHappened has no property, skipping verification step.'}, {'objectType': 'analysisStart', 'top': 'Control', 'concrete': ['HasHappened'], 'abstract': [], 'assumptions': [['HasHappened', 1]]}, {'objectType': 'log', 'level': 'warn', 'source': 'parse', 'value': 'BMC Initial state is unsat, the system has no reachable states.'}, {'objectType': 'property', 'name': 'ControlSpec[l117c12].R5: Unlocking granted only if there is a request and the master key is not inserted[5]', 'scope': 'Control', 'line': 109, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.021}, 'answer': {'source': 'bmc', 'value': 'valid'}}, {'objectType': 'property', 'name': 'ControlSpec[l117c12].R4: Once it has been set, the current code can change only when the master key is inserted[4]', 'scope': 'Control', 'line': 106, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.021}, 'answer': {'source': 'bmc', 'value': 'valid'}}, {'objectType': 'property', 'name': 'ControlSpec[l117c12].R3: An unlock request is granted only if the provided code equals the current access code[3]', 'scope': 'Control', 'line': 102, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.021}, 'answer': {'source': 'bmc', 'value': 'valid'}}, {'objectType': 'property', 'name': 'ControlSpec[l117c12].R2: unlock request is granted whenever the provided code equals the current one[2]', 'scope': 'Control', 'line': 99, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.021}, 'answer': {'source': 'bmc', 'value': 'valid'}}, {'objectType': 'property', 'name': 'ControlSpec[l117c12].R1: Until the access code is first set, the door cannot be unlocked[1]', 'scope': 'Control', 'line': 94, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.021}, 'answer': {'source': 'bmc', 'value': 'valid'}}, {'objectType': 'analysisStop'}, {'objectType': 'analysisStart', 'top': 'Keypad', 'concrete': [], 'abstract': [], 'assumptions': [['Control', 1], ['HasHappened', 1]]}, {'objectType': 'property', 'name': 'KeypadSpec[l54c12].R1: The component will not send an unlock requests before its third cycle[1]', 'scope': 'Keypad', 'line': 38, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.033}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'KeypadSpec[l54c12].R4: Whenever there is a request a digit is pressed[4]', 'scope': 'Keypad', 'line': 47, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.033}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'KeypadSpec[l54c12].R2: Any two distinct unlock requests are separated by at least 2 clock cycles[2]', 'scope': 'Keypad', 'line': 41, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.044}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'KeypadSpec[l54c12].R3: Code is always non-negative[3]', 'scope': 'Keypad', 'line': 44, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.044}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'analysisStop'}, {'objectType': 'log', 'level': 'note', 'source': 'parse', 'value': 'System Since has no property, skipping verification step.'}, {'objectType': 'analysisStart', 'top': 'Lock', 'concrete': ['Since', 'HasHappened'], 'abstract': ['Keypad', 'Control'], 'assumptions': [['Since', 1]]}, {'objectType': 'property', 'name': 'Control[l164c27].A1: Code is always non-negative[1]', 'scope': 'Control', 'line': 91, 'column': 2, 'source': 'Assumption', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.033}, 'k': 0, 'answer': {'source': 'ic3', 'value': 'falsifiable'}, 'counterExample': [{'blockType': 'node', 'name': 'Lock', 'streams': [{'name': 'Digit', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0]]}, {'name': 'Press', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False]]}, {'name': 'MasterKey', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False]]}, {'name': 'Unlocking', 'type': 'bool', 'class': 'output', 'instantValues': [[0, False]]}, {'name': 'Timer', 'type': 'int', 'class': 'local', 'instantValues': [[0, 0]]}, {'name': 'Granted', 'type': 'bool', 'class': 'local', 'instantValues': [[0, False]]}, {'name': 'Request', 'type': 'bool', 'class': 'local', 'instantValues': [[0, False]]}, {'name': 'Code', 'type': 'int', 'class': 'local', 'instantValues': [[0, 1]]}], 'subnodes': [{'blockType': 'node', 'name': 'Since', 'streams': [{'name': 'X', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False]]}, {'name': 'Y', 'type': 'bool', 'class': 'input', 'instantValues': [[0, True]]}, {'name': 'SinceXY', 'type': 'bool', 'class': 'output', 'instantValues': [[0, False]]}]}, {'blockType': 'node', 'name': 'Keypad', 'streams': [{'name': 'Digit', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0]]}, {'name': 'Press', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False]]}, {'name': 'Request', 'type': 'bool', 'class': 'output', 'instantValues': [[0, False]]}, {'name': 'Code', 'type': 'int', 'class': 'output', 'instantValues': [[0, 1]]}]}, {'blockType': 'node', 'name': 'Control', 'streams': [{'name': 'Request', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False]]}, {'name': 'Code', 'type': 'int', 'class': 'input', 'instantValues': [[0, 1]]}, {'name': 'MasterKey', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False]]}, {'name': 'CurrentCode', 'type': 'int', 'class': 'output', 'instantValues': [[0, 1]]}, {'name': 'Granted', 'type': 'bool', 'class': 'output', 'instantValues': [[0, False]]}]}]}]}, {'objectType': 'property', 'name': 'Keypad[l162c20].A1: Digit is always non-negative[1]', 'scope': 'Keypad', 'line': 29, 'column': 2, 'source': 'Assumption', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.055}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'LockSpec[l158c12].R1: The door will never be held open for more than 4 clock cycles at a time[1]', 'scope': 'Lock', 'line': 145, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.055}, 'k': 5, 'answer': {'source': 'bmc', 'value': 'falsifiable'}, 'counterExample': [{'blockType': 'node', 'name': 'Lock', 'streams': [{'name': 'Digit', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0], [1, 0], [2, 0], [3, 0], [4, 0], [5, 0]]}, {'name': 'Press', 'type': 'bool', 'class': 'input', 'instantValues': [[0, True], [1, True], [2, True], [3, True], [4, False], [5, True]]}, {'name': 'MasterKey', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False], [1, False], [2, False], [3, False], [4, False], [5, False]]}, {'name': 'Unlocking', 'type': 'bool', 'class': 'output', 'instantValues': [[0, False], [1, True], [2, True], [3, True], [4, True], [5, True]]}, {'name': 'Timer', 'type': 'int', 'class': 'local', 'instantValues': [[0, 0], [1, 50], [2, 49], [3, 48], [4, 47], [5, 46]]}, {'name': 'Granted', 'type': 'bool', 'class': 'local', 'instantValues': [[0, True], [1, True], [2, False], [3, True], [4, False], [5, False]]}, {'name': 'Request', 'type': 'bool', 'class': 'local', 'instantValues': [[0, False], [1, False], [2, False], [3, False], [4, False], [5, True]]}, {'name': 'Code', 'type': 'int', 'class': 'local', 'instantValues': [[0, 0], [1, 0], [2, 0], [3, 0], [4, 1], [5, 2]]}], 'subnodes': [{'blockType': 'node', 'name': 'Keypad', 'streams': [{'name': 'Digit', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0], [1, 0], [2, 0], [3, 0], [4, 0], [5, 0]]}, {'name': 'Press', 'type': 'bool', 'class': 'input', 'instantValues': [[0, True], [1, True], [2, True], [3, True], [4, False], [5, True]]}, {'name': 'Request', 'type': 'bool', 'class': 'output', 'instantValues': [[0, False], [1, False], [2, False], [3, False], [4, False], [5, True]]}, {'name': 'Code', 'type': 'int', 'class': 'output', 'instantValues': [[0, 0], [1, 0], [2, 0], [3, 0], [4, 1], [5, 2]]}]}, {'blockType': 'node', 'name': 'Control', 'streams': [{'name': 'Request', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False], [1, False], [2, False], [3, False], [4, False], [5, True]]}, {'name': 'Code', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0], [1, 0], [2, 0], [3, 0], [4, 1], [5, 2]]}, {'name': 'MasterKey', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False], [1, False], [2, False], [3, False], [4, False], [5, False]]}, {'name': 'CurrentCode', 'type': 'int', 'class': 'output', 'instantValues': [[0, 2], [1, 2], [2, 2], [3, 1], [4, 2], [5, 2]]}, {'name': 'Granted', 'type': 'bool', 'class': 'output', 'instantValues': [[0, True], [1, True], [2, False], [3, True], [4, False], [5, False]]}]}]}]}, {'objectType': 'property', 'name': 'LockSpec[l158c12].R2: Door locks remains locked as long as no one uses the keypad[2]', 'scope': 'Lock', 'line': 150, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 1.062}, 'k': 52, 'answer': {'source': 'bmc', 'value': 'falsifiable'}, 'counterExample': [{'blockType': 'node', 'name': 'Lock', 'streams': [{'name': 'Digit', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0], [1, 0], [2, 0], [3, 0], [4, 0], [5, 0], [6, 0], [7, 0], [8, 0], [9, 0], [10, 0], [11, 0], [12, 0], [13, 0], [14, 0], [15, 0], [16, 0], [17, 0], [18, 0], [19, 0], [20, 0], [21, 0], [22, 0], [23, 0], [24, 0], [25, 0], [26, 0], [27, 0], [28, 0], [29, 0], [30, 0], [31, 0], [32, 0], [33, 0], [34, 0], [35, 0], [36, 0], [37, 0], [38, 0], [39, 0], [40, 0], [41, 0], [42, 0], [43, 0], [44, 0], [45, 0], [46, 0], [47, 0], [48, 0], [49, 0], [50, 0], [51, 0], [52, 0]]}, {'name': 'Press', 'type': 'bool', 'class': 'input', 'instantValues': [[0, True], [1, True], [2, False], [3, False], [4, True], [5, True], [6, False], [7, False], [8, True], [9, True], [10, False], [11, True], [12, True], [13, False], [14, True], [15, False], [16, True], [17, True], [18, True], [19, True], [20, True], [21, True], [22, True], [23, True], [24, True], [25, True], [26, True], [27, True], [28, True], [29, False], [30, True], [31, True], [32, False], [33, True], [34, True], [35, False], [36, True], [37, True], [38, True], [39, False], [40, True], [41, True], [42, False], [43, True], [44, True], [45, True], [46, True], [47, False], [48, True], [49, True], [50, False], [51, True], [52, False]]}, {'name': 'MasterKey', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False], [1, False], [2, False], [3, False], [4, False], [5, False], [6, False], [7, False], [8, False], [9, False], [10, False], [11, False], [12, False], [13, False], [14, True], [15, False], [16, False], [17, False], [18, False], [19, True], [20, False], [21, False], [22, False], [23, False], [24, True], [25, False], [26, False], [27, False], [28, False], [29, False], [30, True], [31, False], [32, False], [33, False], [34, False], [35, False], [36, False], [37, False], [38, False], [39, False], [40, False], [41, False], [42, False], [43, False], [44, True], [45, False], [46, True], [47, False], [48, False], [49, False], [50, False], [51, False], [52, False]]}, {'name': 'Unlocking', 'type': 'bool', 'class': 'output', 'instantValues': [[0, False], [1, True], [2, True], [3, True], [4, True], [5, True], [6, True], [7, True], [8, True], [9, True], [10, True], [11, True], [12, True], [13, True], [14, True], [15, True], [16, True], [17, True], [18, True], [19, True], [20, True], [21, True], [22, True], [23, True], [24, True], [25, True], [26, True], [27, True], [28, True], [29, True], [30, True], [31, True], [32, True], [33, True], [34, True], [35, True], [36, True], [37, True], [38, True], [39, True], [40, True], [41, True], [42, True], [43, True], [44, True], [45, True], [46, True], [47, True], [48, True], [49, True], [50, True], [51, False], [52, True]]}, {'name': 'Timer', 'type': 'int', 'class': 'local', 'instantValues': [[0, 0], [1, 50], [2, 49], [3, 48], [4, 47], [5, 46], [6, 45], [7, 44], [8, 43], [9, 42], [10, 41], [11, 40], [12, 39], [13, 38], [14, 37], [15, 36], [16, 35], [17, 34], [18, 33], [19, 32], [20, 31], [21, 30], [22, 29], [23, 28], [24, 27], [25, 26], [26, 25], [27, 24], [28, 23], [29, 22], [30, 21], [31, 20], [32, 19], [33, 18], [34, 17], [35, 16], [36, 15], [37, 14], [38, 13], [39, 12], [40, 11], [41, 10], [42, 9], [43, 8], [44, 7], [45, 6], [46, 5], [47, 4], [48, 3], [49, 2], [50, 1], [51, 0], [52, 50]]}, {'name': 'Granted', 'type': 'bool', 'class': 'local', 'instantValues': [[0, True], [1, True], [2, False], [3, False], [4, False], [5, False], [6, False], [7, False], [8, False], [9, False], [10, False], [11, False], [12, False], [13, False], [14, False], [15, False], [16, False], [17, False], [18, False], [19, False], [20, False], [21, False], [22, False], [23, False], [24, False], [25, False], [26, False], [27, False], [28, False], [29, False], [30, False], [31, False], [32, False], [33, True], [34, True], [35, True], [36, True], [37, True], [38, True], [39, True], [40, False], [41, False], [42, False], [43, True], [44, False], [45, True], [46, False], [47, True], [48, True], [49, False], [50, True], [51, False], [52, True]]}, {'name': 'Request', 'type': 'bool', 'class': 'local', 'instantValues': [[0, False], [1, False], [2, False], [3, False], [4, False], [5, True], [6, False], [7, False], [8, False], [9, False], [10, False], [11, False], [12, False], [13, False], [14, True], [15, False], [16, False], [17, False], [18, False], [19, True], [20, False], [21, False], [22, False], [23, True], [24, False], [25, False], [26, False], [27, False], [28, False], [29, False], [30, False], [31, False], [32, False], [33, False], [34, False], [35, False], [36, False], [37, False], [38, False], [39, False], [40, True], [41, False], [42, False], [43, False], [44, False], [45, False], [46, False], [47, False], [48, False], [49, True], [50, False], [51, False], [52, False]]}, {'name': 'Code', 'type': 'int', 'class': 'local', 'instantValues': [[0, 0], [1, 1], [2, 0], [3, 2], [4, 2], [5, 0], [6, 0], [7, 1], [8, 0], [9, 3], [10, 2], [11, 0], [12, 0], [13, 1], [14, 2], [15, 1], [16, 1], [17, 2], [18, 2], [19, 0], [20, 3], [21, 3], [22, 5], [23, 6], [24, 0], [25, 6], [26, 5], [27, 4], [28, 3], [29, 3], [30, 0], [31, 3], [32, 0], [33, 3], [34, 3], [35, 0], [36, 3], [37, 0], [38, 3], [39, 0], [40, 0], [41, 5], [42, 2], [43, 0], [44, 3], [45, 1], [46, 3], [47, 0], [48, 0], [49, 1], [50, 0], [51, 5], [52, 0]]}], 'subnodes': [{'blockType': 'node', 'name': 'Since', 'streams': [{'name': 'X', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False], [1, False], [2, False], [3, False], [4, False], [5, False], [6, False], [7, False], [8, False], [9, False], [10, False], [11, False], [12, False], [13, False], [14, False], [15, False], [16, False], [17, False], [18, False], [19, False], [20, False], [21, False], [22, False], [23, False], [24, False], [25, False], [26, False], [27, False], [28, False], [29, False], [30, False], [31, False], [32, False], [33, False], [34, False], [35, False], [36, False], [37, False], [38, False], [39, False], [40, False], [41, False], [42, False], [43, False], [44, False], [45, False], [46, False], [47, False], [48, False], [49, False], [50, False], [51, True], [52, False]]}, {'name': 'Y', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False], [1, False], [2, True], [3, True], [4, False], [5, False], [6, True], [7, True], [8, False], [9, False], [10, True], [11, False], [12, False], [13, True], [14, False], [15, True], [16, False], [17, False], [18, False], [19, False], [20, False], [21, False], [22, False], [23, False], [24, False], [25, False], [26, False], [27, False], [28, False], [29, True], [30, False], [31, False], [32, True], [33, False], [34, False], [35, True], [36, False], [37, False], [38, False], [39, True], [40, False], [41, False], [42, True], [43, False], [44, False], [45, False], [46, False], [47, True], [48, False], [49, False], [50, True], [51, False], [52, True]]}, {'name': 'SinceXY', 'type': 'bool', 'class': 'output', 'instantValues': [[0, False], [1, False], [2, False], [3, False], [4, False], [5, False], [6, False], [7, False], [8, False], [9, False], [10, False], [11, False], [12, False], [13, False], [14, False], [15, False], [16, False], [17, False], [18, False], [19, False], [20, False], [21, False], [22, False], [23, False], [24, False], [25, False], [26, False], [27, False], [28, False], [29, False], [30, False], [31, False], [32, False], [33, False], [34, False], [35, False], [36, False], [37, False], [38, False], [39, False], [40, False], [41, False], [42, False], [43, False], [44, False], [45, False], [46, False], [47, False], [48, False], [49, False], [50, False], [51, True], [52, True]]}]}, {'blockType': 'node', 'name': 'Keypad', 'streams': [{'name': 'Digit', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0], [1, 0], [2, 0], [3, 0], [4, 0], [5, 0], [6, 0], [7, 0], [8, 0], [9, 0], [10, 0], [11, 0], [12, 0], [13, 0], [14, 0], [15, 0], [16, 0], [17, 0], [18, 0], [19, 0], [20, 0], [21, 0], [22, 0], [23, 0], [24, 0], [25, 0], [26, 0], [27, 0], [28, 0], [29, 0], [30, 0], [31, 0], [32, 0], [33, 0], [34, 0], [35, 0], [36, 0], [37, 0], [38, 0], [39, 0], [40, 0], [41, 0], [42, 0], [43, 0], [44, 0], [45, 0], [46, 0], [47, 0], [48, 0], [49, 0], [50, 0], [51, 0], [52, 0]]}, {'name': 'Press', 'type': 'bool', 'class': 'input', 'instantValues': [[0, True], [1, True], [2, False], [3, False], [4, True], [5, True], [6, False], [7, False], [8, True], [9, True], [10, False], [11, True], [12, True], [13, False], [14, True], [15, False], [16, True], [17, True], [18, True], [19, True], [20, True], [21, True], [22, True], [23, True], [24, True], [25, True], [26, True], [27, True], [28, True], [29, False], [30, True], [31, True], [32, False], [33, True], [34, True], [35, False], [36, True], [37, True], [38, True], [39, False], [40, True], [41, True], [42, False], [43, True], [44, True], [45, True], [46, True], [47, False], [48, True], [49, True], [50, False], [51, True], [52, False]]}, {'name': 'Request', 'type': 'bool', 'class': 'output', 'instantValues': [[0, False], [1, False], [2, False], [3, False], [4, False], [5, True], [6, False], [7, False], [8, False], [9, False], [10, False], [11, False], [12, False], [13, False], [14, True], [15, False], [16, False], [17, False], [18, False], [19, True], [20, False], [21, False], [22, False], [23, True], [24, False], [25, False], [26, False], [27, False], [28, False], [29, False], [30, False], [31, False], [32, False], [33, False], [34, False], [35, False], [36, False], [37, False], [38, False], [39, False], [40, True], [41, False], [42, False], [43, False], [44, False], [45, False], [46, False], [47, False], [48, False], [49, True], [50, False], [51, False], [52, False]]}, {'name': 'Code', 'type': 'int', 'class': 'output', 'instantValues': [[0, 0], [1, 1], [2, 0], [3, 2], [4, 2], [5, 0], [6, 0], [7, 1], [8, 0], [9, 3], [10, 2], [11, 0], [12, 0], [13, 1], [14, 2], [15, 1], [16, 1], [17, 2], [18, 2], [19, 0], [20, 3], [21, 3], [22, 5], [23, 6], [24, 0], [25, 6], [26, 5], [27, 4], [28, 3], [29, 3], [30, 0], [31, 3], [32, 0], [33, 3], [34, 3], [35, 0], [36, 3], [37, 0], [38, 3], [39, 0], [40, 0], [41, 5], [42, 2], [43, 0], [44, 3], [45, 1], [46, 3], [47, 0], [48, 0], [49, 1], [50, 0], [51, 5], [52, 0]]}]}, {'blockType': 'node', 'name': 'Control', 'streams': [{'name': 'Request', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False], [1, False], [2, False], [3, False], [4, False], [5, True], [6, False], [7, False], [8, False], [9, False], [10, False], [11, False], [12, False], [13, False], [14, True], [15, False], [16, False], [17, False], [18, False], [19, True], [20, False], [21, False], [22, False], [23, True], [24, False], [25, False], [26, False], [27, False], [28, False], [29, False], [30, False], [31, False], [32, False], [33, False], [34, False], [35, False], [36, False], [37, False], [38, False], [39, False], [40, True], [41, False], [42, False], [43, False], [44, False], [45, False], [46, False], [47, False], [48, False], [49, True], [50, False], [51, False], [52, False]]}, {'name': 'Code', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0], [1, 1], [2, 0], [3, 2], [4, 2], [5, 0], [6, 0], [7, 1], [8, 0], [9, 3], [10, 2], [11, 0], [12, 0], [13, 1], [14, 2], [15, 1], [16, 1], [17, 2], [18, 2], [19, 0], [20, 3], [21, 3], [22, 5], [23, 6], [24, 0], [25, 6], [26, 5], [27, 4], [28, 3], [29, 3], [30, 0], [31, 3], [32, 0], [33, 3], [34, 3], [35, 0], [36, 3], [37, 0], [38, 3], [39, 0], [40, 0], [41, 5], [42, 2], [43, 0], [44, 3], [45, 1], [46, 3], [47, 0], [48, 0], [49, 1], [50, 0], [51, 5], [52, 0]]}, {'name': 'MasterKey', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False], [1, False], [2, False], [3, False], [4, False], [5, False], [6, False], [7, False], [8, False], [9, False], [10, False], [11, False], [12, False], [13, False], [14, True], [15, False], [16, False], [17, False], [18, False], [19, True], [20, False], [21, False], [22, False], [23, False], [24, True], [25, False], [26, False], [27, False], [28, False], [29, False], [30, True], [31, False], [32, False], [33, False], [34, False], [35, False], [36, False], [37, False], [38, False], [39, False], [40, False], [41, False], [42, False], [43, False], [44, True], [45, False], [46, True], [47, False], [48, False], [49, False], [50, False], [51, False], [52, False]]}, {'name': 'CurrentCode', 'type': 'int', 'class': 'output', 'instantValues': [[0, 2], [1, 1], [2, 1], [3, 1], [4, 2], [5, 0], [6, 0], [7, 2], [8, 1], [9, 2], [10, 1], [11, 0], [12, 0], [13, 0], [14, 1], [15, 2], [16, 1], [17, 1], [18, 2], [19, 1], [20, 2], [21, 3], [22, 4], [23, 6], [24, 5], [25, 5], [26, 4], [27, 3], [28, 2], [29, 2], [30, 2], [31, 2], [32, 1], [33, 2], [34, 4], [35, 3], [36, 2], [37, 3], [38, 2], [39, 1], [40, 0], [41, 4], [42, 3], [43, 3], [44, 2], [45, 2], [46, 2], [47, 1], [48, 2], [49, 2], [50, 3], [51, 4], [52, -1]]}, {'name': 'Granted', 'type': 'bool', 'class': 'output', 'instantValues': [[0, True], [1, True], [2, False], [3, False], [4, False], [5, False], [6, False], [7, False], [8, False], [9, False], [10, False], [11, False], [12, False], [13, False], [14, False], [15, False], [16, False], [17, False], [18, False], [19, False], [20, False], [21, False], [22, False], [23, False], [24, False], [25, False], [26, False], [27, False], [28, False], [29, False], [30, False], [31, False], [32, False], [33, True], [34, True], [35, True], [36, True], [37, True], [38, True], [39, True], [40, False], [41, False], [42, False], [43, True], [44, False], [45, True], [46, False], [47, True], [48, True], [49, False], [50, True], [51, False], [52, True]]}]}]}]}, {'objectType': 'analysisStop'}]";
        return json;
    }

    public static String s4b()
    {
        String json = "[{'objectType': 'kind2Options', 'enabled': ['bmc', 'ind', 'ind2', 'ic3', 'invgents', 'invgenos', 'invgenintos', 'invgenintos'], 'timeout': 0.0, 'bmcMax': 0, 'compositional': True, 'modular': True}, {'objectType': 'log', 'level': 'info', 'source': 'parse', 'value': 'kind2 v1.1.0-482-gd69f383a'}, {'objectType': 'log', 'level': 'note', 'source': 'parse', 'value': 'System HasHappened has no property, skipping verification step.'}, {'objectType': 'analysisStart', 'top': 'Control', 'concrete': ['HasHappened'], 'abstract': [], 'assumptions': [['HasHappened', 1]]}, {'objectType': 'property', 'name': 'ControlSpec[l117c12].R1: Until the access code is first set, the door cannot be unlocked[1]', 'scope': 'Control', 'line': 94, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.032}, 'answer': {'source': 'ic3', 'value': 'valid'}}, {'objectType': 'property', 'name': 'ControlSpec[l117c12].R2: unlock request is granted whenever the provided code equals the current one[2]', 'scope': 'Control', 'line': 99, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.032}, 'answer': {'source': 'ic3', 'value': 'valid'}}, {'objectType': 'property', 'name': 'ControlSpec[l117c12].R3: An unlock request is granted only if the provided code equals the current access code[3]', 'scope': 'Control', 'line': 102, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.032}, 'answer': {'source': 'ic3', 'value': 'valid'}}, {'objectType': 'property', 'name': 'ControlSpec[l117c12].R4: Once it has been set, the current code can change only when the master key is inserted[4]', 'scope': 'Control', 'line': 106, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.032}, 'answer': {'source': 'ic3', 'value': 'valid'}}, {'objectType': 'property', 'name': 'ControlSpec[l117c12].R5: Unlocking granted only if there is a request and the master key is not inserted[5]', 'scope': 'Control', 'line': 109, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.032}, 'answer': {'source': 'ic3', 'value': 'valid'}}, {'objectType': 'analysisStop'}, {'objectType': 'analysisStart', 'top': 'Keypad', 'concrete': [], 'abstract': [], 'assumptions': [['Control', 1], ['HasHappened', 1]]}, {'objectType': 'property', 'name': 'KeypadSpec[l54c12].R3: Code is always non-negative[3]', 'scope': 'Keypad', 'line': 44, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.043}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'KeypadSpec[l54c12].R1: The component will not send an unlock requests before its third cycle[1]', 'scope': 'Keypad', 'line': 38, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.043}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'KeypadSpec[l54c12].R2: Any two distinct unlock requests are separated by at least 2 clock cycles[2]', 'scope': 'Keypad', 'line': 41, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.053}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'analysisStop'}, {'objectType': 'log', 'level': 'note', 'source': 'parse', 'value': 'System Since has no property, skipping verification step.'}, {'objectType': 'analysisStart', 'top': 'Lock', 'concrete': ['Since', 'HasHappened'], 'abstract': ['Keypad', 'Control'], 'assumptions': [['Since', 1]]}, {'objectType': 'property', 'name': 'Control[l164c27].A1: Code is always non-negative[1]', 'scope': 'Control', 'line': 91, 'column': 2, 'source': 'Assumption', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.032}, 'k': 0, 'answer': {'source': 'ic3', 'value': 'falsifiable'}, 'counterExample': [{'blockType': 'node', 'name': 'Lock', 'streams': [{'name': 'Digit', 'type': 'int', 'class': 'input', 'instantValues': [[0, 10]]}, {'name': 'Press', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False]]}, {'name': 'MasterKey', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False]]}, {'name': 'Unlocking', 'type': 'bool', 'class': 'output', 'instantValues': [[0, False]]}, {'name': 'Timer', 'type': 'int', 'class': 'local', 'instantValues': [[0, 0]]}, {'name': 'Granted', 'type': 'bool', 'class': 'local', 'instantValues': [[0, False]]}, {'name': 'Request', 'type': 'bool', 'class': 'local', 'instantValues': [[0, False]]}, {'name': 'Code', 'type': 'int', 'class': 'local', 'instantValues': [[0, -2]]}], 'subnodes': [{'blockType': 'node', 'name': 'Since', 'streams': [{'name': 'X', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False]]}, {'name': 'Y', 'type': 'bool', 'class': 'input', 'instantValues': [[0, True]]}, {'name': 'SinceXY', 'type': 'bool', 'class': 'output', 'instantValues': [[0, False]]}]}, {'blockType': 'node', 'name': 'Keypad', 'streams': [{'name': 'Digit', 'type': 'int', 'class': 'input', 'instantValues': [[0, 10]]}, {'name': 'Press', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False]]}, {'name': 'Request', 'type': 'bool', 'class': 'output', 'instantValues': [[0, False]]}, {'name': 'Code', 'type': 'int', 'class': 'output', 'instantValues': [[0, -2]]}]}, {'blockType': 'node', 'name': 'Control', 'streams': [{'name': 'Request', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False]]}, {'name': 'Code', 'type': 'int', 'class': 'input', 'instantValues': [[0, -2]]}, {'name': 'MasterKey', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False]]}, {'name': 'CurrentCode', 'type': 'int', 'class': 'output', 'instantValues': [[0, -1]]}, {'name': 'Granted', 'type': 'bool', 'class': 'output', 'instantValues': [[0, False]]}]}]}]}, {'objectType': 'property', 'name': 'Keypad[l162c20].A2: Digit is always smaller than nine[2]', 'scope': 'Keypad', 'line': 32, 'column': 2, 'source': 'Assumption', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.032}, 'k': 0, 'answer': {'source': 'ic3', 'value': 'falsifiable'}, 'counterExample': [{'blockType': 'node', 'name': 'Lock', 'streams': [{'name': 'Digit', 'type': 'int', 'class': 'input', 'instantValues': [[0, 10]]}, {'name': 'Press', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False]]}, {'name': 'MasterKey', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False]]}, {'name': 'Unlocking', 'type': 'bool', 'class': 'output', 'instantValues': [[0, False]]}, {'name': 'Timer', 'type': 'int', 'class': 'local', 'instantValues': [[0, 0]]}, {'name': 'Granted', 'type': 'bool', 'class': 'local', 'instantValues': [[0, False]]}, {'name': 'Request', 'type': 'bool', 'class': 'local', 'instantValues': [[0, False]]}, {'name': 'Code', 'type': 'int', 'class': 'local', 'instantValues': [[0, -2]]}], 'subnodes': [{'blockType': 'node', 'name': 'Since', 'streams': [{'name': 'X', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False]]}, {'name': 'Y', 'type': 'bool', 'class': 'input', 'instantValues': [[0, True]]}, {'name': 'SinceXY', 'type': 'bool', 'class': 'output', 'instantValues': [[0, False]]}]}, {'blockType': 'node', 'name': 'Keypad', 'streams': [{'name': 'Digit', 'type': 'int', 'class': 'input', 'instantValues': [[0, 10]]}, {'name': 'Press', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False]]}, {'name': 'Request', 'type': 'bool', 'class': 'output', 'instantValues': [[0, False]]}, {'name': 'Code', 'type': 'int', 'class': 'output', 'instantValues': [[0, -2]]}]}, {'blockType': 'node', 'name': 'Control', 'streams': [{'name': 'Request', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False]]}, {'name': 'Code', 'type': 'int', 'class': 'input', 'instantValues': [[0, -2]]}, {'name': 'MasterKey', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False]]}, {'name': 'CurrentCode', 'type': 'int', 'class': 'output', 'instantValues': [[0, -1]]}, {'name': 'Granted', 'type': 'bool', 'class': 'output', 'instantValues': [[0, False]]}]}]}]}, {'objectType': 'property', 'name': 'LockSpec[l158c12].R2: Door locks remains locked as long as no one uses the keypad[2]', 'scope': 'Lock', 'line': 150, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.046}, 'k': 6, 'answer': {'source': 'bmc', 'value': 'falsifiable'}, 'counterExample': [{'blockType': 'node', 'name': 'Lock', 'streams': [{'name': 'Digit', 'type': 'int', 'class': 'input', 'instantValues': [[0, 10], [1, 10], [2, 10], [3, 10], [4, 10], [5, 10], [6, 10]]}, {'name': 'Press', 'type': 'bool', 'class': 'input', 'instantValues': [[0, True], [1, True], [2, True], [3, True], [4, True], [5, False], [6, False]]}, {'name': 'MasterKey', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False], [1, False], [2, False], [3, True], [4, False], [5, False], [6, False]]}, {'name': 'Unlocking', 'type': 'bool', 'class': 'output', 'instantValues': [[0, False], [1, True], [2, True], [3, True], [4, True], [5, False], [6, True]]}, {'name': 'Timer', 'type': 'int', 'class': 'local', 'instantValues': [[0, 0], [1, 4], [2, 3], [3, 2], [4, 1], [5, 0], [6, 4]]}, {'name': 'Granted', 'type': 'bool', 'class': 'local', 'instantValues': [[0, False], [1, True], [2, False], [3, False], [4, True], [5, False], [6, True]]}, {'name': 'Request', 'type': 'bool', 'class': 'local', 'instantValues': [[0, False], [1, True], [2, True], [3, True], [4, True], [5, False], [6, False]]}, {'name': 'Code', 'type': 'int', 'class': 'local', 'instantValues': [[0, -1], [1, -1], [2, -1], [3, -3], [4, -2], [5, -4], [6, -4]]}], 'subnodes': [{'blockType': 'node', 'name': 'Since', 'streams': [{'name': 'X', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False], [1, False], [2, False], [3, False], [4, False], [5, True], [6, False]]}, {'name': 'Y', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False], [1, False], [2, False], [3, False], [4, False], [5, True], [6, True]]}, {'name': 'SinceXY', 'type': 'bool', 'class': 'output', 'instantValues': [[0, False], [1, False], [2, False], [3, False], [4, False], [5, True], [6, True]]}]}, {'blockType': 'node', 'name': 'Keypad', 'streams': [{'name': 'Digit', 'type': 'int', 'class': 'input', 'instantValues': [[0, 10], [1, 10], [2, 10], [3, 10], [4, 10], [5, 10], [6, 10]]}, {'name': 'Press', 'type': 'bool', 'class': 'input', 'instantValues': [[0, True], [1, True], [2, True], [3, True], [4, True], [5, False], [6, False]]}, {'name': 'Request', 'type': 'bool', 'class': 'output', 'instantValues': [[0, False], [1, True], [2, True], [3, True], [4, True], [5, False], [6, False]]}, {'name': 'Code', 'type': 'int', 'class': 'output', 'instantValues': [[0, -1], [1, -1], [2, -1], [3, -3], [4, -2], [5, -4], [6, -4]]}]}, {'blockType': 'node', 'name': 'Control', 'streams': [{'name': 'Request', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False], [1, True], [2, True], [3, True], [4, True], [5, False], [6, False]]}, {'name': 'Code', 'type': 'int', 'class': 'input', 'instantValues': [[0, -1], [1, -1], [2, -1], [3, -3], [4, -2], [5, -4], [6, -4]]}, {'name': 'MasterKey', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False], [1, False], [2, False], [3, True], [4, False], [5, False], [6, False]]}, {'name': 'CurrentCode', 'type': 'int', 'class': 'output', 'instantValues': [[0, -1], [1, -1], [2, -1], [3, -2], [4, -3], [5, -3], [6, -3]]}, {'name': 'Granted', 'type': 'bool', 'class': 'output', 'instantValues': [[0, False], [1, True], [2, False], [3, False], [4, True], [5, False], [6, True]]}]}]}]}, {'objectType': 'property', 'name': 'Keypad[l162c20].A1: Digit is always non-negative[1]', 'scope': 'Keypad', 'line': 29, 'column': 2, 'source': 'Assumption', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.057}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'LockSpec[l158c12].R1: The door will never be held open for more than 4 clock cycles at a time[1]', 'scope': 'Lock', 'line': 145, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.209}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'analysisStop'}]";
        return json;
    }

    public static String s5()
    {
        String json = "[{'objectType': 'kind2Options', 'enabled': ['bmc', 'ind', 'ind2', 'ic3', 'invgents', 'invgenos', 'invgenintos', 'invgenintos'], 'timeout': 5.0, 'bmcMax': 0, 'compositional': True, 'modular': True}, {'objectType': 'log', 'level': 'info', 'source': 'parse', 'value': 'kind2 v1.1.0-486-g3e68273a'}, {'objectType': 'log', 'level': 'note', 'source': 'parse', 'value': 'System HasHappened has no property, skipping verification step.'}, {'objectType': 'analysisStart', 'top': 'Control', 'concrete': ['HasHappened'], 'abstract': [], 'assumptions': [['HasHappened', 1]]}, {'objectType': 'property', 'name': 'ControlSpec[l117c12].R2: unlock request is granted whenever the provided code equals the current one[2]', 'scope': 'Control', 'line': 99, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.042}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'ControlSpec[l117c12].R3: An unlock request is granted only if the provided code equals the current access code[3]', 'scope': 'Control', 'line': 102, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.042}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'ControlSpec[l117c12].R1: Until the access code is first set, the door cannot be unlocked[1]', 'scope': 'Control', 'line': 94, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.042}, 'answer': {'source': 'ic3', 'value': 'valid'}}, {'objectType': 'property', 'name': 'ControlSpec[l117c12].R4: Once it has been set, the current code can change only when the master key is inserted[4]', 'scope': 'Control', 'line': 106, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.042}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'ControlSpec[l117c12].R5: Unlocking granted only if there is a request and the master key is not inserted[5]', 'scope': 'Control', 'line': 109, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.042}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'analysisStop'}, {'objectType': 'analysisStart', 'top': 'Keypad', 'concrete': [], 'abstract': [], 'assumptions': [['Control', 1], ['HasHappened', 1]]}, {'objectType': 'property', 'name': 'KeypadSpec[l54c12].R4: Whenever there is a request a digit is pressed[4]', 'scope': 'Keypad', 'line': 47, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.043}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'KeypadSpec[l54c12].R1: The component will not send an unlock requests before its third cycle[1]', 'scope': 'Keypad', 'line': 38, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.043}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'KeypadSpec[l54c12].R2: Any two distinct unlock requests are separated by at least 2 clock cycles[2]', 'scope': 'Keypad', 'line': 41, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.053}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'KeypadSpec[l54c12].R3: Code is always non-negative[3]', 'scope': 'Keypad', 'line': 44, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.053}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'analysisStop'}, {'objectType': 'log', 'level': 'note', 'source': 'parse', 'value': 'System Since has no property, skipping verification step.'}, {'objectType': 'analysisStart', 'top': 'Lock', 'concrete': ['Since', 'HasHappened'], 'abstract': ['Keypad', 'Control'], 'assumptions': [['Since', 1]]}, {'objectType': 'property', 'name': 'Keypad[l162c20].A1: Digit is always non-negative[1]', 'scope': 'Keypad', 'line': 29, 'column': 2, 'source': 'Assumption', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.043}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'LockSpec[l158c12].R1: The door will never be held open for more than 4 clock cycles at a time[1]', 'scope': 'Lock', 'line': 145, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.053}, 'k': 8, 'answer': {'source': 'bmc', 'value': 'falsifiable'}, 'counterExample': [{'blockType': 'node', 'name': 'Lock', 'streams': [{'name': 'Digit', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0], [1, 0], [2, 0], [3, 0], [4, 0], [5, 0], [6, 0], [7, 0], [8, 0]]}, {'name': 'Press', 'type': 'bool', 'class': 'input', 'instantValues': [[0, True], [1, True], [2, True], [3, True], [4, True], [5, True], [6, True], [7, True], [8, True]]}, {'name': 'MasterKey', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False], [1, True], [2, True], [3, False], [4, False], [5, False], [6, False], [7, False], [8, False]]}, {'name': 'Unlocking', 'type': 'bool', 'class': 'output', 'instantValues': [[0, False], [1, False], [2, False], [3, False], [4, True], [5, True], [6, True], [7, True], [8, True]]}, {'name': 'Timer', 'type': 'int', 'class': 'local', 'instantValues': [[0, 0], [1, 0], [2, 0], [3, 0], [4, 40], [5, 39], [6, 38], [7, 37], [8, 36]]}, {'name': 'Granted', 'type': 'bool', 'class': 'local', 'instantValues': [[0, False], [1, False], [2, False], [3, False], [4, True], [5, False], [6, False], [7, False], [8, False]]}, {'name': 'Request', 'type': 'bool', 'class': 'local', 'instantValues': [[0, False], [1, True], [2, False], [3, False], [4, True], [5, False], [6, False], [7, True], [8, False]]}, {'name': 'Code', 'type': 'int', 'class': 'local', 'instantValues': [[0, 1], [1, 1], [2, 0], [3, 2], [4, 1], [5, 0], [6, 1], [7, 0], [8, 2]]}], 'subnodes': [{'blockType': 'node', 'name': 'Keypad', 'streams': [{'name': 'Digit', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0], [1, 0], [2, 0], [3, 0], [4, 0], [5, 0], [6, 0], [7, 0], [8, 0]]}, {'name': 'Press', 'type': 'bool', 'class': 'input', 'instantValues': [[0, True], [1, True], [2, True], [3, True], [4, True], [5, True], [6, True], [7, True], [8, True]]}, {'name': 'Request', 'type': 'bool', 'class': 'output', 'instantValues': [[0, False], [1, True], [2, False], [3, False], [4, True], [5, False], [6, False], [7, True], [8, False]]}, {'name': 'Code', 'type': 'int', 'class': 'output', 'instantValues': [[0, 1], [1, 1], [2, 0], [3, 2], [4, 1], [5, 0], [6, 1], [7, 0], [8, 2]]}]}, {'blockType': 'node', 'name': 'Control', 'streams': [{'name': 'Request', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False], [1, True], [2, False], [3, False], [4, True], [5, False], [6, False], [7, True], [8, False]]}, {'name': 'Code', 'type': 'int', 'class': 'input', 'instantValues': [[0, 1], [1, 1], [2, 0], [3, 2], [4, 1], [5, 0], [6, 1], [7, 0], [8, 2]]}, {'name': 'MasterKey', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False], [1, True], [2, True], [3, False], [4, False], [5, False], [6, False], [7, False], [8, False]]}, {'name': 'CurrentCode', 'type': 'int', 'class': 'output', 'instantValues': [[0, 1], [1, 1], [2, 1], [3, 1], [4, 1], [5, 1], [6, 1], [7, 1], [8, 1]]}, {'name': 'Granted', 'type': 'bool', 'class': 'output', 'instantValues': [[0, False], [1, False], [2, False], [3, False], [4, True], [5, False], [6, False], [7, False], [8, False]]}]}]}]}, {'objectType': 'property', 'name': 'Control[l164c27].A1: Code is always non-negative[1]', 'scope': 'Control', 'line': 91, 'column': 2, 'source': 'Assumption', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.086}, 'answer': {'source': 'ic3', 'value': 'valid'}}, {'objectType': 'property', 'name': 'LockSpec[l158c12].R2: Door locks remains locked as long as no one uses the keypad[2]', 'scope': 'Lock', 'line': 150, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.086}, 'answer': {'source': 'ic3', 'value': 'valid'}}, {'objectType': 'analysisStop'}, {'objectType': 'analysisStart', 'top': 'Lock', 'concrete': ['Since', 'Keypad', 'HasHappened'], 'abstract': ['Control'], 'assumptions': [['Control', 1], ['HasHappened', 1], ['Keypad', 1], ['Lock', 1], ['Since', 1]]}, {'objectType': 'property', 'name': 'LockSpec[l158c12].R1: The door will never be held open for more than 4 clock cycles at a time[1]', 'scope': 'Lock', 'line': 145, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.074}, 'k': 9, 'answer': {'source': 'bmc', 'value': 'falsifiable'}, 'counterExample': [{'blockType': 'node', 'name': 'Lock', 'streams': [{'name': 'Digit', 'type': 'int', 'class': 'input', 'instantValues': [[0, 97261], [1, 0], [2, 0], [3, 9726], [4, 0], [5, 8753501], [6, 9726100], [7, 9726942], [8, 1142], [9, 9726943]]}, {'name': 'Press', 'type': 'bool', 'class': 'input', 'instantValues': [[0, True], [1, True], [2, True], [3, True], [4, True], [5, True], [6, False], [7, True], [8, False], [9, False]]}, {'name': 'MasterKey', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False], [1, False], [2, True], [3, False], [4, False], [5, False], [6, False], [7, True], [8, False], [9, False]]}, {'name': 'Unlocking', 'type': 'bool', 'class': 'output', 'instantValues': [[0, False], [1, False], [2, False], [3, False], [4, False], [5, True], [6, True], [7, True], [8, True], [9, True]]}, {'name': 'Timer', 'type': 'int', 'class': 'local', 'instantValues': [[0, 0], [1, 0], [2, 0], [3, 0], [4, 0], [5, 40], [6, 39], [7, 38], [8, 37], [9, 36]]}, {'name': 'Granted', 'type': 'bool', 'class': 'local', 'instantValues': [[0, False], [1, False], [2, False], [3, False], [4, False], [5, True], [6, False], [7, False], [8, False], [9, False]]}, {'name': 'Request', 'type': 'bool', 'class': 'local', 'instantValues': [[0, False], [1, False], [2, True], [3, False], [4, False], [5, True], [6, False], [7, False], [8, False], [9, False]]}, {'name': 'Code', 'type': 'int', 'class': 'local', 'instantValues': [[0, 97261], [1, 972610], [2, 9726100], [3, 9726], [4, 97260], [5, 9726101], [6, 9726101], [7, 9726942], [8, 9726942], [9, 9726942]]}], 'subnodes': [{'blockType': 'node', 'name': 'Keypad', 'streams': [{'name': 'Digit', 'type': 'int', 'class': 'input', 'instantValues': [[0, 97261], [1, 0], [2, 0], [3, 9726], [4, 0], [5, 8753501], [6, 9726100], [7, 9726942], [8, 1142], [9, 9726943]]}, {'name': 'Press', 'type': 'bool', 'class': 'input', 'instantValues': [[0, True], [1, True], [2, True], [3, True], [4, True], [5, True], [6, False], [7, True], [8, False], [9, False]]}, {'name': 'Request', 'type': 'bool', 'class': 'output', 'instantValues': [[0, False], [1, False], [2, True], [3, False], [4, False], [5, True], [6, False], [7, False], [8, False], [9, False]]}, {'name': 'Code', 'type': 'int', 'class': 'output', 'instantValues': [[0, 97261], [1, 972610], [2, 9726100], [3, 9726], [4, 97260], [5, 9726101], [6, 9726101], [7, 9726942], [8, 9726942], [9, 9726942]]}, {'name': 'PressedDigits', 'type': 'int', 'class': 'local', 'instantValues': [[0, 1], [1, 2], [2, 3], [3, 1], [4, 2], [5, 3], [6, 3], [7, 1], [8, 1], [9, 1]]}, {'name': 'ElapsedTime', 'type': 'int', 'class': 'local', 'instantValues': [[0, 0], [1, 0], [2, 0], [3, 0], [4, 0], [5, 0], [6, 0], [7, 0], [8, 1], [9, 2]]}, {'name': 'ExpirationTime', 'type': 'subrange [9, 9] of int', 'class': 'local', 'instantValues': [[0, 9], [1, 9], [2, 9], [3, 9], [4, 9], [5, 9], [6, 9], [7, 9], [8, 9], [9, 9]]}, {'name': 'IncompleteCode', 'type': 'bool', 'class': 'local', 'instantValues': [[0, False], [1, True], [2, True], [3, False], [4, True], [5, True], [6, False], [7, False], [8, True], [9, True]]}]}, {'blockType': 'node', 'name': 'Control', 'streams': [{'name': 'Request', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False], [1, False], [2, True], [3, False], [4, False], [5, True], [6, False], [7, False], [8, False], [9, False]]}, {'name': 'Code', 'type': 'int', 'class': 'input', 'instantValues': [[0, 97261], [1, 972610], [2, 9726100], [3, 9726], [4, 97260], [5, 9726101], [6, 9726101], [7, 9726942], [8, 9726942], [9, 9726942]]}, {'name': 'MasterKey', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False], [1, False], [2, True], [3, False], [4, False], [5, False], [6, False], [7, True], [8, False], [9, False]]}, {'name': 'CurrentCode', 'type': 'int', 'class': 'output', 'instantValues': [[0, 97260], [1, 972609], [2, 9726101], [3, 9726101], [4, 9726101], [5, 9726101], [6, 9726101], [7, 9726943], [8, 9726943], [9, 9726943]]}, {'name': 'Granted', 'type': 'bool', 'class': 'output', 'instantValues': [[0, False], [1, False], [2, False], [3, False], [4, False], [5, True], [6, False], [7, False], [8, False], [9, False]]}]}]}]}, {'objectType': 'analysisStop'}, {'objectType': 'analysisStart', 'top': 'Lock', 'concrete': ['Since', 'Keypad', 'HasHappened', 'Control'], 'abstract': [], 'assumptions': [['Control', 1], ['HasHappened', 1], ['Keypad', 1], ['Lock', 1], ['Since', 1]]}, {'objectType': 'property', 'name': 'LockSpec[l158c12].R1: The door will never be held open for more than 4 clock cycles at a time[1]', 'scope': 'Lock', 'line': 145, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.094}, 'k': 9, 'answer': {'source': 'bmc', 'value': 'falsifiable'}, 'counterExample': [{'blockType': 'node', 'name': 'Lock', 'streams': [{'name': 'Digit', 'type': 'int', 'class': 'input', 'instantValues': [[0, 5], [1, 0], [2, 0], [3, 5], [4, 0], [5, 0], [6, 1323], [7, 500], [8, 499], [9, 381]]}, {'name': 'Press', 'type': 'bool', 'class': 'input', 'instantValues': [[0, True], [1, True], [2, True], [3, True], [4, True], [5, True], [6, False], [7, True], [8, False], [9, False]]}, {'name': 'MasterKey', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False], [1, False], [2, True], [3, False], [4, False], [5, False], [6, False], [7, False], [8, False], [9, False]]}, {'name': 'Unlocking', 'type': 'bool', 'class': 'output', 'instantValues': [[0, False], [1, False], [2, False], [3, False], [4, False], [5, True], [6, True], [7, True], [8, True], [9, True]]}, {'name': 'Timer', 'type': 'int', 'class': 'local', 'instantValues': [[0, 0], [1, 0], [2, 0], [3, 0], [4, 0], [5, 40], [6, 39], [7, 38], [8, 37], [9, 36]]}, {'name': 'Granted', 'type': 'bool', 'class': 'local', 'instantValues': [[0, False], [1, False], [2, False], [3, False], [4, False], [5, True], [6, False], [7, False], [8, False], [9, False]]}, {'name': 'Request', 'type': 'bool', 'class': 'local', 'instantValues': [[0, False], [1, False], [2, True], [3, False], [4, False], [5, True], [6, False], [7, False], [8, False], [9, False]]}, {'name': 'Code', 'type': 'int', 'class': 'local', 'instantValues': [[0, 5], [1, 50], [2, 500], [3, 5], [4, 50], [5, 500], [6, 500], [7, 500], [8, 500], [9, 500]]}], 'subnodes': [{'blockType': 'node', 'name': 'Keypad', 'streams': [{'name': 'Digit', 'type': 'int', 'class': 'input', 'instantValues': [[0, 5], [1, 0], [2, 0], [3, 5], [4, 0], [5, 0], [6, 1323], [7, 500], [8, 499], [9, 381]]}, {'name': 'Press', 'type': 'bool', 'class': 'input', 'instantValues': [[0, True], [1, True], [2, True], [3, True], [4, True], [5, True], [6, False], [7, True], [8, False], [9, False]]}, {'name': 'Request', 'type': 'bool', 'class': 'output', 'instantValues': [[0, False], [1, False], [2, True], [3, False], [4, False], [5, True], [6, False], [7, False], [8, False], [9, False]]}, {'name': 'Code', 'type': 'int', 'class': 'output', 'instantValues': [[0, 5], [1, 50], [2, 500], [3, 5], [4, 50], [5, 500], [6, 500], [7, 500], [8, 500], [9, 500]]}, {'name': 'PressedDigits', 'type': 'int', 'class': 'local', 'instantValues': [[0, 1], [1, 2], [2, 3], [3, 1], [4, 2], [5, 3], [6, 3], [7, 1], [8, 1], [9, 1]]}, {'name': 'ElapsedTime', 'type': 'int', 'class': 'local', 'instantValues': [[0, 0], [1, 0], [2, 0], [3, 0], [4, 0], [5, 0], [6, 0], [7, 0], [8, 1], [9, 2]]}, {'name': 'ExpirationTime', 'type': 'subrange [9, 9] of int', 'class': 'local', 'instantValues': [[0, 9], [1, 9], [2, 9], [3, 9], [4, 9], [5, 9], [6, 9], [7, 9], [8, 9], [9, 9]]}, {'name': 'IncompleteCode', 'type': 'bool', 'class': 'local', 'instantValues': [[0, False], [1, True], [2, True], [3, False], [4, True], [5, True], [6, False], [7, False], [8, True], [9, True]]}]}, {'blockType': 'node', 'name': 'Control', 'streams': [{'name': 'Request', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False], [1, False], [2, True], [3, False], [4, False], [5, True], [6, False], [7, False], [8, False], [9, False]]}, {'name': 'Code', 'type': 'int', 'class': 'input', 'instantValues': [[0, 5], [1, 50], [2, 500], [3, 5], [4, 50], [5, 500], [6, 500], [7, 500], [8, 500], [9, 500]]}, {'name': 'MasterKey', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False], [1, False], [2, True], [3, False], [4, False], [5, False], [6, False], [7, False], [8, False], [9, False]]}, {'name': 'CurrentCode', 'type': 'int', 'class': 'output', 'instantValues': [[0, -1], [1, -1], [2, 500], [3, 500], [4, 500], [5, 500], [6, 500], [7, 500], [8, 500], [9, 500]]}, {'name': 'Granted', 'type': 'bool', 'class': 'output', 'instantValues': [[0, False], [1, False], [2, False], [3, False], [4, False], [5, True], [6, False], [7, False], [8, False], [9, False]]}]}]}]}, {'objectType': 'analysisStop'}]";
        return json;
    }


    public static String s5b()
    {
        String json = "[{'objectType': 'kind2Options', 'enabled': ['bmc', 'ind', 'ind2', 'ic3', 'invgents', 'invgenos', 'invgenintos', 'invgenintos'], 'timeout': 0.0, 'bmcMax': 0, 'compositional': True, 'modular': True}, {'objectType': 'log', 'level': 'info', 'source': 'parse', 'value': 'kind2 v1.1.0-482-gd69f383a'}, {'objectType': 'analysisStart', 'top': 'abs', 'concrete': [], 'abstract': [], 'assumptions': []}, {'objectType': 'property', 'name': 'Absolute', 'line': 6, 'column': 3, 'source': 'PropAnnot', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.021}, 'k': 0, 'answer': {'source': 'ic3', 'value': 'falsifiable'}, 'counterExample': [{'blockType': 'node', 'name': 'abs', 'streams': [{'name': 'x', 'type': 'real', 'class': 'input', 'instantValues': [[0, 4]]}, {'name': 'y', 'type': 'real', 'class': 'output', 'instantValues': [[0, -4]]}, {'name': 'Absolute', 'type': 'bool', 'class': 'local', 'instantValues': [[0, False]]}]}]}, {'objectType': 'analysisStop'}]";
        return json;
    }

    public static String s5c()
    {
        String json = "[{'objectType': 'kind2Options', 'enabled': ['bmc', 'ind', 'ind2', 'ic3', 'invgents', 'invgenos', 'invgenintos', 'invgenintos'], 'timeout': 0.0, 'bmcMax': 0, 'compositional': True, 'modular': True}, {'objectType': 'log', 'level': 'info', 'source': 'parse', 'value': 'kind2 v1.1.0-482-gd69f383a'}, {'objectType': 'analysisStart', 'top': 'b', 'concrete': [], 'abstract': [], 'assumptions': []}, {'objectType': 'property', 'name': 'bSpec[l8c12].guarantee[l4c3][1]', 'scope': 'b', 'line': 4, 'column': 3, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.021}, 'answer': {'source': 'ic3', 'value': 'valid'}}, {'objectType': 'analysisStop'}, {'objectType': 'analysisStart', 'top': 'a', 'concrete': [], 'abstract': [], 'assumptions': [['b', 1]]}, {'objectType': 'property', 'name': 'aSpec[l20c12].guarantee[l16c3][1]', 'scope': 'a', 'line': 16, 'column': 3, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.028}, 'k': 0, 'answer': {'source': 'ic3', 'value': 'falsifiable'}, 'counterExample': [{'blockType': 'node', 'name': 'a'}]}, {'objectType': 'analysisStop'}, {'objectType': 'analysisStart', 'top': 'a', 'concrete': [], 'abstract': [], 'assumptions': [['a', 1]]}, {'objectType': 'property', 'name': 'aSpec[l20c12].guarantee[l16c3][1]', 'scope': 'a', 'line': 16, 'column': 3, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.038}, 'k': 0, 'answer': {'source': 'ic3', 'value': 'falsifiable'}, 'counterExample': [{'blockType': 'node', 'name': 'a'}]}, {'objectType': 'analysisStop'}]";
        return json;
    }

    public static String s6()
    {
        String json = "[{'objectType': 'kind2Options', 'enabled': ['bmc', 'ind', 'ind2', 'ic3', 'invgents', 'invgenos', 'invgenintos', 'invgenintos'], 'timeout': 5.0, 'bmcMax': 0, 'compositional': True, 'modular': True}, {'objectType': 'log', 'level': 'info', 'source': 'parse', 'value': 'kind2 v1.1.0-486-g3e68273a'}, {'objectType': 'log', 'level': 'note', 'source': 'parse', 'value': 'System HasHappened has no property, skipping verification step.'}, {'objectType': 'analysisStart', 'top': 'Control', 'concrete': ['HasHappened'], 'abstract': [], 'assumptions': [['HasHappened', 1]]}, {'objectType': 'property', 'name': 'ControlSpec[l117c12].R5: Unlocking granted only if there is a request and the master key is not inserted[5]', 'scope': 'Control', 'line': 109, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.034}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'ControlSpec[l117c12].R1: Until the access code is first set, the door cannot be unlocked[1]', 'scope': 'Control', 'line': 94, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.034}, 'answer': {'source': 'ic3', 'value': 'valid'}}, {'objectType': 'property', 'name': 'ControlSpec[l117c12].R4: Once it has been set, the current code can change only when the master key is inserted[4]', 'scope': 'Control', 'line': 106, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.034}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'ControlSpec[l117c12].R2: unlock request is granted whenever the provided code equals the current one[2]', 'scope': 'Control', 'line': 99, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.034}, 'answer': {'source': 'ic3', 'value': 'valid'}}, {'objectType': 'property', 'name': 'ControlSpec[l117c12].R3: An unlock request is granted only if the provided code equals the current access code[3]', 'scope': 'Control', 'line': 102, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.034}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'analysisStop'}, {'objectType': 'analysisStart', 'top': 'Keypad', 'concrete': [], 'abstract': [], 'assumptions': [['Control', 1], ['HasHappened', 1]]}, {'objectType': 'property', 'name': 'KeypadSpec[l54c12].R1: The component will not send an unlock requests before its third cycle[1]', 'scope': 'Keypad', 'line': 38, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.022}, 'k': 0, 'answer': {'source': 'ic3', 'value': 'falsifiable'}, 'counterExample': [{'blockType': 'node', 'name': 'Keypad', 'streams': [{'name': 'Press', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False]]}, {'name': 'Request', 'type': 'bool', 'class': 'output', 'instantValues': [[0, False]]}, {'name': 'PressedDigits', 'type': 'int', 'class': 'local', 'instantValues': [[0, 0]]}, {'name': 'ElapsedTime', 'type': 'int', 'class': 'local', 'instantValues': [[0, 0]]}, {'name': 'ExpirationTime', 'type': 'subrange [9, 9] of int', 'class': 'local', 'instantValues': [[0, 9]]}, {'name': 'IncompleteCode', 'type': 'bool', 'class': 'local', 'instantValues': [[0, False]]}]}]}, {'objectType': 'property', 'name': 'KeypadSpec[l54c12].R4: Whenever there is a request a digit is pressed[4]', 'scope': 'Keypad', 'line': 47, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.053}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'KeypadSpec[l54c12].R3: Code is always non-negative[3]', 'scope': 'Keypad', 'line': 44, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.053}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'KeypadSpec[l54c12].R2: Any two distinct unlock requests are separated by at least 2 clock cycles[2]', 'scope': 'Keypad', 'line': 41, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.053}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'analysisStop'}, {'objectType': 'log', 'level': 'note', 'source': 'parse', 'value': 'System Since has no property, skipping verification step.'}, {'objectType': 'analysisStart', 'top': 'Lock', 'concrete': ['Since', 'HasHappened'], 'abstract': ['Keypad', 'Control'], 'assumptions': [['Since', 1]]}, {'objectType': 'property', 'name': 'Keypad[l162c20].A1: Digit is always non-negative[1]', 'scope': 'Keypad', 'line': 29, 'column': 2, 'source': 'Assumption', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.044}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'LockSpec[l158c12].R1: The door will never be held open for more than 4 clock cycles at a time[1]', 'scope': 'Lock', 'line': 145, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.054}, 'k': 7, 'answer': {'source': 'bmc', 'value': 'falsifiable'}, 'counterExample': [{'blockType': 'node', 'name': 'Lock', 'streams': [{'name': 'Digit', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0], [1, 0], [2, 0], [3, 0], [4, 0], [5, 0], [6, 0], [7, 0]]}, {'name': 'Press', 'type': 'bool', 'class': 'input', 'instantValues': [[0, True], [1, True], [2, True], [3, True], [4, False], [5, False], [6, True], [7, True]]}, {'name': 'MasterKey', 'type': 'bool', 'class': 'input', 'instantValues': [[0, True], [1, False], [2, False], [3, False], [4, False], [5, False], [6, False], [7, False]]}, {'name': 'Unlocking', 'type': 'bool', 'class': 'output', 'instantValues': [[0, False], [1, False], [2, False], [3, True], [4, True], [5, True], [6, True], [7, True]]}, {'name': 'Timer', 'type': 'int', 'class': 'local', 'instantValues': [[0, 0], [1, 0], [2, 0], [3, 50], [4, 49], [5, 48], [6, 47], [7, 46]]}, {'name': 'Granted', 'type': 'bool', 'class': 'local', 'instantValues': [[0, False], [1, False], [2, False], [3, True], [4, False], [5, False], [6, False], [7, False]]}, {'name': 'Request', 'type': 'bool', 'class': 'local', 'instantValues': [[0, True], [1, False], [2, False], [3, True], [4, False], [5, False], [6, False], [7, True]]}, {'name': 'Code', 'type': 'int', 'class': 'local', 'instantValues': [[0, 2], [1, 1], [2, 1], [3, 1], [4, 2], [5, 1], [6, 0], [7, 0]]}], 'subnodes': [{'blockType': 'node', 'name': 'Keypad', 'streams': [{'name': 'Digit', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0], [1, 0], [2, 0], [3, 0], [4, 0], [5, 0], [6, 0], [7, 0]]}, {'name': 'Press', 'type': 'bool', 'class': 'input', 'instantValues': [[0, True], [1, True], [2, True], [3, True], [4, False], [5, False], [6, True], [7, True]]}, {'name': 'Request', 'type': 'bool', 'class': 'output', 'instantValues': [[0, True], [1, False], [2, False], [3, True], [4, False], [5, False], [6, False], [7, True]]}, {'name': 'Code', 'type': 'int', 'class': 'output', 'instantValues': [[0, 2], [1, 1], [2, 1], [3, 1], [4, 2], [5, 1], [6, 0], [7, 0]]}]}, {'blockType': 'node', 'name': 'Control', 'streams': [{'name': 'Request', 'type': 'bool', 'class': 'input', 'instantValues': [[0, True], [1, False], [2, False], [3, True], [4, False], [5, False], [6, False], [7, True]]}, {'name': 'Code', 'type': 'int', 'class': 'input', 'instantValues': [[0, 2], [1, 1], [2, 1], [3, 1], [4, 2], [5, 1], [6, 0], [7, 0]]}, {'name': 'MasterKey', 'type': 'bool', 'class': 'input', 'instantValues': [[0, True], [1, False], [2, False], [3, False], [4, False], [5, False], [6, False], [7, False]]}, {'name': 'CurrentCode', 'type': 'int', 'class': 'output', 'instantValues': [[0, 1], [1, 1], [2, 1], [3, 1], [4, 1], [5, 1], [6, 1], [7, 1]]}, {'name': 'Granted', 'type': 'bool', 'class': 'output', 'instantValues': [[0, False], [1, False], [2, False], [3, True], [4, False], [5, False], [6, False], [7, False]]}]}]}]}, {'objectType': 'property', 'name': 'LockSpec[l158c12].R2: Door locks remains locked as long as no one uses the keypad[2]', 'scope': 'Lock', 'line': 150, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.116}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'Control[l164c27].A1: Code is always non-negative[1]', 'scope': 'Control', 'line': 91, 'column': 2, 'source': 'Assumption', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.116}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'analysisStop'}, {'objectType': 'analysisStart', 'top': 'Lock', 'concrete': ['Since', 'HasHappened', 'Control'], 'abstract': ['Keypad'], 'assumptions': [['Control', 1], ['HasHappened', 1], ['Keypad', 1], ['Lock', 1], ['Since', 1]]}, {'objectType': 'property', 'name': 'LockSpec[l158c12].R1: The door will never be held open for more than 4 clock cycles at a time[1]', 'scope': 'Lock', 'line': 145, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.063}, 'k': 10, 'answer': {'source': 'bmc', 'value': 'falsifiable'}, 'counterExample': [{'blockType': 'node', 'name': 'Lock', 'streams': [{'name': 'Digit', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0], [1, 0], [2, 0], [3, 0], [4, 0], [5, 0], [6, 0], [7, 0], [8, 0], [9, 0], [10, 0]]}, {'name': 'Press', 'type': 'bool', 'class': 'input', 'instantValues': [[0, True], [1, True], [2, True], [3, True], [4, False], [5, True], [6, True], [7, True], [8, True], [9, True], [10, True]]}, {'name': 'MasterKey', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False], [1, False], [2, False], [3, True], [4, False], [5, False], [6, False], [7, False], [8, False], [9, False], [10, False]]}, {'name': 'Unlocking', 'type': 'bool', 'class': 'output', 'instantValues': [[0, False], [1, False], [2, False], [3, False], [4, False], [5, False], [6, True], [7, True], [8, True], [9, True], [10, True]]}, {'name': 'Timer', 'type': 'int', 'class': 'local', 'instantValues': [[0, 0], [1, 0], [2, 0], [3, 0], [4, 0], [5, 0], [6, 50], [7, 49], [8, 48], [9, 47], [10, 46]]}, {'name': 'Granted', 'type': 'bool', 'class': 'local', 'instantValues': [[0, False], [1, False], [2, False], [3, False], [4, False], [5, False], [6, True], [7, False], [8, False], [9, False], [10, True]]}, {'name': 'Request', 'type': 'bool', 'class': 'local', 'instantValues': [[0, True], [1, False], [2, False], [3, True], [4, False], [5, False], [6, True], [7, False], [8, False], [9, False], [10, True]]}, {'name': 'Code', 'type': 'int', 'class': 'local', 'instantValues': [[0, 0], [1, 0], [2, 0], [3, 9264], [4, 9265], [5, 9265], [6, 9264], [7, 0], [8, 9263], [9, 9264], [10, 9264]]}], 'subnodes': [{'blockType': 'node', 'name': 'Keypad', 'streams': [{'name': 'Digit', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0], [1, 0], [2, 0], [3, 0], [4, 0], [5, 0], [6, 0], [7, 0], [8, 0], [9, 0], [10, 0]]}, {'name': 'Press', 'type': 'bool', 'class': 'input', 'instantValues': [[0, True], [1, True], [2, True], [3, True], [4, False], [5, True], [6, True], [7, True], [8, True], [9, True], [10, True]]}, {'name': 'Request', 'type': 'bool', 'class': 'output', 'instantValues': [[0, True], [1, False], [2, False], [3, True], [4, False], [5, False], [6, True], [7, False], [8, False], [9, False], [10, True]]}, {'name': 'Code', 'type': 'int', 'class': 'output', 'instantValues': [[0, 0], [1, 0], [2, 0], [3, 9264], [4, 9265], [5, 9265], [6, 9264], [7, 0], [8, 9263], [9, 9264], [10, 9264]]}]}, {'blockType': 'node', 'name': 'Control', 'streams': [{'name': 'Request', 'type': 'bool', 'class': 'input', 'instantValues': [[0, True], [1, False], [2, False], [3, True], [4, False], [5, False], [6, True], [7, False], [8, False], [9, False], [10, True]]}, {'name': 'Code', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0], [1, 0], [2, 0], [3, 9264], [4, 9265], [5, 9265], [6, 9264], [7, 0], [8, 9263], [9, 9264], [10, 9264]]}, {'name': 'MasterKey', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False], [1, False], [2, False], [3, True], [4, False], [5, False], [6, False], [7, False], [8, False], [9, False], [10, False]]}, {'name': 'CurrentCode', 'type': 'int', 'class': 'output', 'instantValues': [[0, -1], [1, -1], [2, -1], [3, 9264], [4, 9264], [5, 9264], [6, 9264], [7, 9264], [8, 9264], [9, 9264], [10, 9264]]}, {'name': 'Granted', 'type': 'bool', 'class': 'output', 'instantValues': [[0, False], [1, False], [2, False], [3, False], [4, False], [5, False], [6, True], [7, False], [8, False], [9, False], [10, True]]}]}]}]}, {'objectType': 'analysisStop'}]";
        return json;
    }

    public static String s6b()
    {
        String json = "[{'objectType': 'kind2Options', 'enabled': ['bmc', 'ind', 'ind2', 'ic3', 'invgents', 'invgenos', 'invgenintos', 'invgenintos'], 'timeout': 5.0, 'bmcMax': 0, 'compositional': True, 'modular': True}, {'objectType': 'log', 'level': 'info', 'source': 'parse', 'value': 'kind2 v1.1.0-486-g3e68273a'}, {'objectType': 'log', 'level': 'note', 'source': 'parse', 'value': 'System HasHappened has no property, skipping verification step.'}, {'objectType': 'analysisStart', 'top': 'Control', 'concrete': ['HasHappened'], 'abstract': [], 'assumptions': [['HasHappened', 1]]}, {'objectType': 'property', 'name': 'ControlSpec[l117c12].R1: Until the access code is first set, the door cannot be unlocked[1]', 'scope': 'Control', 'line': 94, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.032}, 'answer': {'source': 'ic3', 'value': 'valid'}}, {'objectType': 'property', 'name': 'ControlSpec[l117c12].R2: unlock request is granted whenever the provided code equals the current one[2]', 'scope': 'Control', 'line': 99, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.032}, 'answer': {'source': 'ic3', 'value': 'valid'}}, {'objectType': 'property', 'name': 'ControlSpec[l117c12].R3: An unlock request is granted only if the provided code equals the current access code[3]', 'scope': 'Control', 'line': 102, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.032}, 'answer': {'source': 'ic3', 'value': 'valid'}}, {'objectType': 'property', 'name': 'ControlSpec[l117c12].R4: Once it has been set, the current code can change only when the master key is inserted[4]', 'scope': 'Control', 'line': 106, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.032}, 'answer': {'source': 'ic3', 'value': 'valid'}}, {'objectType': 'property', 'name': 'ControlSpec[l117c12].R5: Unlocking granted only if there is a request and the master key is not inserted[5]', 'scope': 'Control', 'line': 109, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.032}, 'answer': {'source': 'ic3', 'value': 'valid'}}, {'objectType': 'analysisStop'}, {'objectType': 'analysisStart', 'top': 'Keypad', 'concrete': [], 'abstract': [], 'assumptions': [['Control', 1], ['HasHappened', 1]]}, {'objectType': 'property', 'name': 'KeypadSpec[l54c12].R1: The component will not send an unlock requests before its third cycle[1]', 'scope': 'Keypad', 'line': 38, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.022}, 'k': 0, 'answer': {'source': 'ic3', 'value': 'falsifiable'}, 'counterExample': [{'blockType': 'node', 'name': 'Keypad', 'streams': [{'name': 'Press', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False]]}, {'name': 'Request', 'type': 'bool', 'class': 'output', 'instantValues': [[0, False]]}, {'name': 'PressedDigits', 'type': 'int', 'class': 'local', 'instantValues': [[0, 0]]}, {'name': 'ElapsedTime', 'type': 'int', 'class': 'local', 'instantValues': [[0, 0]]}, {'name': 'ExpirationTime', 'type': 'subrange [9, 9] of int', 'class': 'local', 'instantValues': [[0, 9]]}, {'name': 'IncompleteCode', 'type': 'bool', 'class': 'local', 'instantValues': [[0, False]]}]}]}, {'objectType': 'property', 'name': 'KeypadSpec[l54c12].R2: Any two distinct unlock requests are separated by at least 2 clock cycles[2]', 'scope': 'Keypad', 'line': 41, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.053}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'KeypadSpec[l54c12].R3: Code is always non-negative[3]', 'scope': 'Keypad', 'line': 44, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.053}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'KeypadSpec[l54c12].R4: Whenever there is a request a digit is pressed[4]', 'scope': 'Keypad', 'line': 47, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.053}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'analysisStop'}, {'objectType': 'log', 'level': 'note', 'source': 'parse', 'value': 'System Since has no property, skipping verification step.'}, {'objectType': 'analysisStart', 'top': 'Lock', 'concrete': ['Since', 'HasHappened'], 'abstract': ['Keypad', 'Control'], 'assumptions': [['Since', 1]]}, {'objectType': 'property', 'name': 'Keypad[l162c20].A1: Digit is always non-negative[1]', 'scope': 'Keypad', 'line': 29, 'column': 2, 'source': 'Assumption', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.054}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'LockSpec[l158c12].R1: The door will never be held open for more than 4 clock cycles at a time[1]', 'scope': 'Lock', 'line': 145, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.054}, 'k': 7, 'answer': {'source': 'bmc', 'value': 'falsifiable'}, 'counterExample': [{'blockType': 'node', 'name': 'Lock', 'streams': [{'name': 'Digit', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0], [1, 0], [2, 0], [3, 0], [4, 0], [5, 0], [6, 0], [7, 0]]}, {'name': 'Press', 'type': 'bool', 'class': 'input', 'instantValues': [[0, True], [1, True], [2, True], [3, True], [4, False], [5, False], [6, True], [7, True]]}, {'name': 'MasterKey', 'type': 'bool', 'class': 'input', 'instantValues': [[0, True], [1, False], [2, False], [3, False], [4, False], [5, False], [6, False], [7, False]]}, {'name': 'Unlocking', 'type': 'bool', 'class': 'output', 'instantValues': [[0, False], [1, False], [2, False], [3, True], [4, True], [5, True], [6, True], [7, True]]}, {'name': 'Timer', 'type': 'int', 'class': 'local', 'instantValues': [[0, 0], [1, 0], [2, 0], [3, 50], [4, 49], [5, 48], [6, 47], [7, 46]]}, {'name': 'Granted', 'type': 'bool', 'class': 'local', 'instantValues': [[0, False], [1, False], [2, False], [3, True], [4, False], [5, False], [6, False], [7, False]]}, {'name': 'Request', 'type': 'bool', 'class': 'local', 'instantValues': [[0, True], [1, False], [2, False], [3, True], [4, False], [5, False], [6, False], [7, True]]}, {'name': 'Code', 'type': 'int', 'class': 'local', 'instantValues': [[0, 2], [1, 1], [2, 1], [3, 1], [4, 2], [5, 1], [6, 0], [7, 0]]}], 'subnodes': [{'blockType': 'node', 'name': 'Keypad', 'streams': [{'name': 'Digit', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0], [1, 0], [2, 0], [3, 0], [4, 0], [5, 0], [6, 0], [7, 0]]}, {'name': 'Press', 'type': 'bool', 'class': 'input', 'instantValues': [[0, True], [1, True], [2, True], [3, True], [4, False], [5, False], [6, True], [7, True]]}, {'name': 'Request', 'type': 'bool', 'class': 'output', 'instantValues': [[0, True], [1, False], [2, False], [3, True], [4, False], [5, False], [6, False], [7, True]]}, {'name': 'Code', 'type': 'int', 'class': 'output', 'instantValues': [[0, 2], [1, 1], [2, 1], [3, 1], [4, 2], [5, 1], [6, 0], [7, 0]]}]}, {'blockType': 'node', 'name': 'Control', 'streams': [{'name': 'Request', 'type': 'bool', 'class': 'input', 'instantValues': [[0, True], [1, False], [2, False], [3, True], [4, False], [5, False], [6, False], [7, True]]}, {'name': 'Code', 'type': 'int', 'class': 'input', 'instantValues': [[0, 2], [1, 1], [2, 1], [3, 1], [4, 2], [5, 1], [6, 0], [7, 0]]}, {'name': 'MasterKey', 'type': 'bool', 'class': 'input', 'instantValues': [[0, True], [1, False], [2, False], [3, False], [4, False], [5, False], [6, False], [7, False]]}, {'name': 'CurrentCode', 'type': 'int', 'class': 'output', 'instantValues': [[0, 1], [1, 1], [2, 1], [3, 1], [4, 1], [5, 1], [6, 1], [7, 1]]}, {'name': 'Granted', 'type': 'bool', 'class': 'output', 'instantValues': [[0, False], [1, False], [2, False], [3, True], [4, False], [5, False], [6, False], [7, False]]}]}]}]}, {'objectType': 'property', 'name': 'LockSpec[l158c12].R2: Door locks remains locked as long as no one uses the keypad[2]', 'scope': 'Lock', 'line': 150, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.169}, 'answer': {'source': 'ind2', 'value': 'valid'}}, {'objectType': 'property', 'name': 'Control[l164c27].A1: Code is always non-negative[1]', 'scope': 'Control', 'line': 91, 'column': 2, 'source': 'Assumption', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.169}, 'answer': {'source': 'ind2', 'value': 'valid'}}, {'objectType': 'analysisStop'}, {'objectType': 'analysisStart', 'top': 'Lock', 'concrete': ['Since', 'HasHappened', 'Control'], 'abstract': ['Keypad'], 'assumptions': [['Control', 1], ['HasHappened', 1], ['Keypad', 1], ['Lock', 1], ['Since', 1]]}, {'objectType': 'property', 'name': 'LockSpec[l158c12].R1: The door will never be held open for more than 4 clock cycles at a time[1]', 'scope': 'Lock', 'line': 145, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.065}, 'k': 10, 'answer': {'source': 'bmc', 'value': 'falsifiable'}, 'counterExample': [{'blockType': 'node', 'name': 'Lock', 'streams': [{'name': 'Digit', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0], [1, 0], [2, 0], [3, 0], [4, 0], [5, 0], [6, 0], [7, 0], [8, 0], [9, 0], [10, 0]]}, {'name': 'Press', 'type': 'bool', 'class': 'input', 'instantValues': [[0, True], [1, True], [2, True], [3, True], [4, True], [5, False], [6, True], [7, True], [8, False], [9, True], [10, True]]}, {'name': 'MasterKey', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False], [1, False], [2, False], [3, True], [4, False], [5, False], [6, False], [7, False], [8, False], [9, False], [10, False]]}, {'name': 'Unlocking', 'type': 'bool', 'class': 'output', 'instantValues': [[0, False], [1, False], [2, False], [3, False], [4, False], [5, False], [6, True], [7, True], [8, True], [9, True], [10, True]]}, {'name': 'Timer', 'type': 'int', 'class': 'local', 'instantValues': [[0, 0], [1, 0], [2, 0], [3, 0], [4, 0], [5, 0], [6, 50], [7, 49], [8, 48], [9, 47], [10, 46]]}, {'name': 'Granted', 'type': 'bool', 'class': 'local', 'instantValues': [[0, False], [1, False], [2, False], [3, False], [4, False], [5, False], [6, True], [7, False], [8, False], [9, False], [10, False]]}, {'name': 'Request', 'type': 'bool', 'class': 'local', 'instantValues': [[0, True], [1, False], [2, False], [3, True], [4, False], [5, False], [6, True], [7, False], [8, False], [9, False], [10, False]]}, {'name': 'Code', 'type': 'int', 'class': 'local', 'instantValues': [[0, 0], [1, 0], [2, 0], [3, 3505], [4, 3506], [5, 3506], [6, 3505], [7, 3506], [8, 3506], [9, 3506], [10, 0]]}], 'subnodes': [{'blockType': 'node', 'name': 'Keypad', 'streams': [{'name': 'Digit', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0], [1, 0], [2, 0], [3, 0], [4, 0], [5, 0], [6, 0], [7, 0], [8, 0], [9, 0], [10, 0]]}, {'name': 'Press', 'type': 'bool', 'class': 'input', 'instantValues': [[0, True], [1, True], [2, True], [3, True], [4, True], [5, False], [6, True], [7, True], [8, False], [9, True], [10, True]]}, {'name': 'Request', 'type': 'bool', 'class': 'output', 'instantValues': [[0, True], [1, False], [2, False], [3, True], [4, False], [5, False], [6, True], [7, False], [8, False], [9, False], [10, False]]}, {'name': 'Code', 'type': 'int', 'class': 'output', 'instantValues': [[0, 0], [1, 0], [2, 0], [3, 3505], [4, 3506], [5, 3506], [6, 3505], [7, 3506], [8, 3506], [9, 3506], [10, 0]]}]}, {'blockType': 'node', 'name': 'Control', 'streams': [{'name': 'Request', 'type': 'bool', 'class': 'input', 'instantValues': [[0, True], [1, False], [2, False], [3, True], [4, False], [5, False], [6, True], [7, False], [8, False], [9, False], [10, False]]}, {'name': 'Code', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0], [1, 0], [2, 0], [3, 3505], [4, 3506], [5, 3506], [6, 3505], [7, 3506], [8, 3506], [9, 3506], [10, 0]]}, {'name': 'MasterKey', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False], [1, False], [2, False], [3, True], [4, False], [5, False], [6, False], [7, False], [8, False], [9, False], [10, False]]}, {'name': 'CurrentCode', 'type': 'int', 'class': 'output', 'instantValues': [[0, -1], [1, -1], [2, -1], [3, 3505], [4, 3505], [5, 3505], [6, 3505], [7, 3505], [8, 3505], [9, 3505], [10, 3505]]}, {'name': 'Granted', 'type': 'bool', 'class': 'output', 'instantValues': [[0, False], [1, False], [2, False], [3, False], [4, False], [5, False], [6, True], [7, False], [8, False], [9, False], [10, False]]}]}]}]}, {'objectType': 'analysisStop'}]";
        return json;
    }

    public static String unknownAnswer()
    {
        String json = "[{'objectType': 'kind2Options', 'enabled': ['bmc', 'ind', 'ind2', 'ic3', 'invgents', 'invgenos', 'invgenintos', 'invgenintos'], 'timeout': 5.0, 'bmcMax': 0, 'compositional': True, 'modular': True}, {'objectType': 'log', 'level': 'info', 'source': 'parse', 'value': 'kind2 v1.1.0-486-g3e68273a'}, {'objectType': 'analysisStart', 'top': 'quintic', 'concrete': [], 'abstract': [], 'assumptions': []}, {'objectType': 'log', 'level': 'warn', 'source': 'parse', 'value': 'In two state invariant generator (bool): a check-sat resulted in `unknown`. This is most likely due to non-linear expressions in the model, usually multiplications `v_1 * v_2` or divisions `v_1 / v_2`. Consider running Kind 2 with `--check_sat_assume false` or abstracting non-linear expressions using contracts.'}, {'objectType': 'log', 'level': 'note', 'source': 'parse', 'value': 'Result analysis: no safe result'}, {'objectType': 'property', 'name': 'quinticSpec[l8c12].guarantee[l3c3][1]', 'scope': 'quintic', 'line': 3, 'column': 3, 'source': 'Guarantee', 'trueFor': 1181, 'answer': {'value': 'unknown'}}, {'objectType': 'log', 'level': 'fatal', 'source': 'parse', 'value': 'Wallclock timeout.'}, {'objectType': 'analysisStop'}]";
        return json;
    }

    public static String iml()
    {
        String json = "[{'objectType': 'kind2Options', 'enabled': ['bmc', 'ind', 'ind2', 'ic3', 'invgents', 'invgenos', 'invgenintos', 'invgenintos'], 'timeout': 0.0, 'bmcMax': 0, 'compositional': False, 'modular': False}, {'objectType': 'log', 'level': 'info', 'source': 'parse', 'value': 'kind2 v1.1.0-482-gd69f383a'}, {'objectType': 'analysisStart', 'top': 'examples_dot_SW_dot_agree_dot_MC_SW_dot_Impl', 'concrete': ['good_pattern', 'good_mission_window', 'good_mission', 'good_map', 'good_gs_command', 'good_coordinate', 'good_HMAC'], 'abstract': ['examples_dot_SW_dot_agree_dot_WaypointManager', 'examples_dot_SW_dot_agree_dot_UARTDriver', 'examples_dot_SW_dot_agree_dot_RadioDriver', 'examples_dot_SW_dot_agree_dot_FlightPlanner'], 'assumptions': []}, {'objectType': 'property', 'name': 'guarantee[l109c2][1]', 'scope': 'examples_dot_SW_dot_agree_dot_MC_SW_dot_Impl', 'line': 109, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.072}, 'k': 0, 'answer': {'source': 'bmc', 'value': 'falsifiable'}, 'counterExample': [{'blockType': 'node', 'name': 'examples_dot_SW_dot_agree_dot_MC_SW_dot_Impl', 'streams': [{'name': 'recv_map.data.HMAC', 'type': 'bool', 'class': 'input', 'instantValues': [[0, True]]}, {'name': 'recv_map.data.Map.wp1.alt', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0]]}, {'name': 'recv_map.data.Map.wp1.lat', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0]]}, {'name': 'recv_map.data.Map.wp1.long', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0]]}, {'name': 'recv_map.data.Map.wp2.alt', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0]]}, {'name': 'recv_map.data.Map.wp2.lat', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0]]}, {'name': 'recv_map.data.Map.wp2.long', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0]]}, {'name': 'recv_map.data.Map.wp3.alt', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0]]}, {'name': 'recv_map.data.Map.wp3.lat', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0]]}, {'name': 'recv_map.data.Map.wp3.long', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0]]}, {'name': 'recv_map.data.Map.wp4.alt', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0]]}, {'name': 'recv_map.data.Map.wp4.lat', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0]]}, {'name': 'recv_map.data.Map.wp4.long', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0]]}, {'name': 'recv_map.data.Pattern', 'type': 'examples_dot_SW_dot_agree_dot_FlightPattern', 'class': 'input', 'instantValues': [[0, 'examples_dot_SW_dot_agree_dot_FlightPattern_dot_ZigZag']]}, {'name': 'recv_map.direction', 'type': 'iml_dot_systems_dot_Direction', 'class': 'input', 'instantValues': [[0, 'iml_dot_systems_dot_Direction_dot_IN']]}, {'name': 'recv_map.event', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False]]}, {'name': 'position_status.data.alt', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0]]}, {'name': 'position_status.data.lat', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0]]}, {'name': 'position_status.data.long', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0]]}, {'name': 'position_status.direction', 'type': 'iml_dot_systems_dot_Direction', 'class': 'input', 'instantValues': [[0, 'iml_dot_systems_dot_Direction_dot_IN']]}, {'name': 'position_status.event', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False]]}, {'name': 'waypoint.data.crc', 'type': 'bool', 'class': 'output', 'instantValues': [[0, False]]}, {'name': 'WPM_waypoint.event', 'type': 'bool', 'class': 'local', 'instantValues': [[0, False]]}, {'name': 'WPM_waypoint.direction', 'type': 'iml_dot_systems_dot_Direction', 'class': 'local', 'instantValues': [[0, 'iml_dot_systems_dot_Direction_dot_IN']]}, {'name': 'WPM_waypoint.data.wp4.long', 'type': 'int', 'class': 'local', 'instantValues': [[0, 181]]}, {'name': 'WPM_waypoint.data.wp4.lat', 'type': 'int', 'class': 'local', 'instantValues': [[0, 91]]}, {'name': 'WPM_waypoint.data.wp4.alt', 'type': 'int', 'class': 'local', 'instantValues': [[0, 15001]]}, {'name': 'WPM_waypoint.data.wp3.long', 'type': 'int', 'class': 'local', 'instantValues': [[0, 181]]}, {'name': 'WPM_waypoint.data.wp3.lat', 'type': 'int', 'class': 'local', 'instantValues': [[0, 91]]}, {'name': 'WPM_waypoint.data.wp3.alt', 'type': 'int', 'class': 'local', 'instantValues': [[0, 15001]]}, {'name': 'WPM_waypoint.data.wp2.long', 'type': 'int', 'class': 'local', 'instantValues': [[0, 181]]}, {'name': 'WPM_waypoint.data.wp2.lat', 'type': 'int', 'class': 'local', 'instantValues': [[0, 91]]}, {'name': 'WPM_waypoint.data.wp2.alt', 'type': 'int', 'class': 'local', 'instantValues': [[0, 15001]]}, {'name': 'WPM_waypoint.data.wp1.long', 'type': 'int', 'class': 'local', 'instantValues': [[0, 181]]}, {'name': 'WPM_waypoint.data.wp1.lat', 'type': 'int', 'class': 'local', 'instantValues': [[0, 91]]}, {'name': 'WPM_waypoint.data.wp1.alt', 'type': 'int', 'class': 'local', 'instantValues': [[0, 15001]]}, {'name': 'WPM_waypoint.data.crc', 'type': 'bool', 'class': 'local', 'instantValues': [[0, False]]}, {'name': 'UART_position_status_out.event', 'type': 'bool', 'class': 'local', 'instantValues': [[0, False]]}, {'name': 'UART_position_status_out.direction', 'type': 'iml_dot_systems_dot_Direction', 'class': 'local', 'instantValues': [[0, 'iml_dot_systems_dot_Direction_dot_IN']]}, {'name': 'UART_position_status_out.data.long', 'type': 'int', 'class': 'local', 'instantValues': [[0, 0]]}, {'name': 'UART_position_status_out.data.lat', 'type': 'int', 'class': 'local', 'instantValues': [[0, 0]]}, {'name': 'UART_position_status_out.data.alt', 'type': 'int', 'class': 'local', 'instantValues': [[0, 0]]}, {'name': 'FPLN_flight_plan.direction', 'type': 'iml_dot_systems_dot_Direction', 'class': 'local', 'instantValues': [[0, 'iml_dot_systems_dot_Direction_dot_IN']]}, {'name': 'FPLN_flight_plan.data.wp9.long', 'type': 'int', 'class': 'local', 'instantValues': [[0, 181]]}, {'name': 'FPLN_flight_plan.data.wp9.lat', 'type': 'int', 'class': 'local', 'instantValues': [[0, 91]]}, {'name': 'FPLN_flight_plan.data.wp9.alt', 'type': 'int', 'class': 'local', 'instantValues': [[0, 15001]]}, {'name': 'FPLN_flight_plan.data.wp8.long', 'type': 'int', 'class': 'local', 'instantValues': [[0, 181]]}, {'name': 'FPLN_flight_plan.data.wp8.lat', 'type': 'int', 'class': 'local', 'instantValues': [[0, 91]]}, {'name': 'FPLN_flight_plan.data.wp8.alt', 'type': 'int', 'class': 'local', 'instantValues': [[0, 15001]]}, {'name': 'FPLN_flight_plan.data.wp7.long', 'type': 'int', 'class': 'local', 'instantValues': [[0, 181]]}, {'name': 'FPLN_flight_plan.data.wp7.lat', 'type': 'int', 'class': 'local', 'instantValues': [[0, 91]]}, {'name': 'FPLN_flight_plan.data.wp7.alt', 'type': 'int', 'class': 'local', 'instantValues': [[0, 15001]]}, {'name': 'FPLN_flight_plan.data.wp6.long', 'type': 'int', 'class': 'local', 'instantValues': [[0, 181]]}, {'name': 'FPLN_flight_plan.data.wp6.lat', 'type': 'int', 'class': 'local', 'instantValues': [[0, 91]]}, {'name': 'FPLN_flight_plan.data.wp6.alt', 'type': 'int', 'class': 'local', 'instantValues': [[0, 15001]]}, {'name': 'FPLN_flight_plan.data.wp5.long', 'type': 'int', 'class': 'local', 'instantValues': [[0, 181]]}, {'name': 'FPLN_flight_plan.data.wp5.lat', 'type': 'int', 'class': 'local', 'instantValues': [[0, 91]]}, {'name': 'FPLN_flight_plan.data.wp5.alt', 'type': 'int', 'class': 'local', 'instantValues': [[0, 15001]]}, {'name': 'FPLN_flight_plan.data.wp4.long', 'type': 'int', 'class': 'local', 'instantValues': [[0, 181]]}, {'name': 'FPLN_flight_plan.data.wp4.lat', 'type': 'int', 'class': 'local', 'instantValues': [[0, 91]]}, {'name': 'FPLN_flight_plan.data.wp4.alt', 'type': 'int', 'class': 'local', 'instantValues': [[0, 15001]]}, {'name': 'FPLN_flight_plan.data.wp3.long', 'type': 'int', 'class': 'local', 'instantValues': [[0, 181]]}, {'name': 'FPLN_flight_plan.data.wp3.lat', 'type': 'int', 'class': 'local', 'instantValues': [[0, 91]]}, {'name': 'FPLN_flight_plan.data.wp3.alt', 'type': 'int', 'class': 'local', 'instantValues': [[0, 15001]]}, {'name': 'FPLN_flight_plan.data.wp2.long', 'type': 'int', 'class': 'local', 'instantValues': [[0, 181]]}, {'name': 'FPLN_flight_plan.data.wp2.lat', 'type': 'int', 'class': 'local', 'instantValues': [[0, 91]]}, {'name': 'FPLN_flight_plan.data.wp2.alt', 'type': 'int', 'class': 'local', 'instantValues': [[0, 15001]]}, {'name': 'FPLN_flight_plan.data.wp10.long', 'type': 'int', 'class': 'local', 'instantValues': [[0, 181]]}, {'name': 'FPLN_flight_plan.data.wp10.lat', 'type': 'int', 'class': 'local', 'instantValues': [[0, 91]]}, {'name': 'FPLN_flight_plan.data.wp10.alt', 'type': 'int', 'class': 'local', 'instantValues': [[0, 15001]]}, {'name': 'FPLN_flight_plan.data.wp1.long', 'type': 'int', 'class': 'local', 'instantValues': [[0, 181]]}, {'name': 'FPLN_flight_plan.data.wp1.lat', 'type': 'int', 'class': 'local', 'instantValues': [[0, 91]]}, {'name': 'FPLN_flight_plan.data.wp1.alt', 'type': 'int', 'class': 'local', 'instantValues': [[0, 15001]]}, {'name': 'RADIO_recv_map_out.event', 'type': 'bool', 'class': 'local', 'instantValues': [[0, False]]}, {'name': 'RADIO_recv_map_out.direction', 'type': 'iml_dot_systems_dot_Direction', 'class': 'local', 'instantValues': [[0, 'iml_dot_systems_dot_Direction_dot_IN']]}, {'name': 'RADIO_recv_map_out.data.Pattern', 'type': 'examples_dot_SW_dot_agree_dot_FlightPattern', 'class': 'local', 'instantValues': [[0, 'examples_dot_SW_dot_agree_dot_FlightPattern_dot_ZigZag']]}, {'name': 'RADIO_recv_map_out.data.Map.wp4.long', 'type': 'int', 'class': 'local', 'instantValues': [[0, 181]]}, {'name': 'RADIO_recv_map_out.data.Map.wp4.lat', 'type': 'int', 'class': 'local', 'instantValues': [[0, 91]]}, {'name': 'RADIO_recv_map_out.data.Map.wp4.alt', 'type': 'int', 'class': 'local', 'instantValues': [[0, 15001]]}, {'name': 'RADIO_recv_map_out.data.Map.wp3.long', 'type': 'int', 'class': 'local', 'instantValues': [[0, 181]]}, {'name': 'RADIO_recv_map_out.data.Map.wp3.lat', 'type': 'int', 'class': 'local', 'instantValues': [[0, 91]]}, {'name': 'RADIO_recv_map_out.data.Map.wp3.alt', 'type': 'int', 'class': 'local', 'instantValues': [[0, 15001]]}, {'name': 'RADIO_recv_map_out.data.Map.wp2.long', 'type': 'int', 'class': 'local', 'instantValues': [[0, 181]]}, {'name': 'RADIO_recv_map_out.data.Map.wp2.lat', 'type': 'int', 'class': 'local', 'instantValues': [[0, 91]]}, {'name': 'RADIO_recv_map_out.data.Map.wp2.alt', 'type': 'int', 'class': 'local', 'instantValues': [[0, 15001]]}, {'name': 'RADIO_recv_map_out.data.Map.wp1.long', 'type': 'int', 'class': 'local', 'instantValues': [[0, 181]]}, {'name': 'RADIO_recv_map_out.data.Map.wp1.lat', 'type': 'int', 'class': 'local', 'instantValues': [[0, 91]]}, {'name': 'RADIO_recv_map_out.data.Map.wp1.alt', 'type': 'int', 'class': 'local', 'instantValues': [[0, 15001]]}, {'name': 'RADIO_recv_map_out.data.HMAC', 'type': 'bool', 'class': 'local', 'instantValues': [[0, True]]}], 'subnodes': [{'blockType': 'node', 'name': 'examples_dot_SW_dot_agree_dot_RadioDriver', 'streams': [{'name': 'send_status_in.data.alt', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0]]}, {'name': 'send_status_in.data.lat', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0]]}, {'name': 'send_status_in.data.long', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0]]}, {'name': 'send_status_in.direction', 'type': 'iml_dot_systems_dot_Direction', 'class': 'input', 'instantValues': [[0, 'iml_dot_systems_dot_Direction_dot_IN']]}, {'name': 'send_status_in.event', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False]]}, {'name': 'recv_map_in.data.HMAC', 'type': 'bool', 'class': 'input', 'instantValues': [[0, True]]}, {'name': 'recv_map_in.data.Map.wp1.alt', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0]]}, {'name': 'recv_map_in.data.Map.wp1.lat', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0]]}, {'name': 'recv_map_in.data.Map.wp1.long', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0]]}, {'name': 'recv_map_in.data.Map.wp2.alt', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0]]}, {'name': 'recv_map_in.data.Map.wp2.lat', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0]]}, {'name': 'recv_map_in.data.Map.wp2.long', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0]]}, {'name': 'recv_map_in.data.Map.wp3.alt', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0]]}, {'name': 'recv_map_in.data.Map.wp3.lat', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0]]}, {'name': 'recv_map_in.data.Map.wp3.long', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0]]}, {'name': 'recv_map_in.data.Map.wp4.alt', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0]]}, {'name': 'recv_map_in.data.Map.wp4.lat', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0]]}, {'name': 'recv_map_in.data.Map.wp4.long', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0]]}, {'name': 'recv_map_in.data.Pattern', 'type': 'examples_dot_SW_dot_agree_dot_FlightPattern', 'class': 'input', 'instantValues': [[0, 'examples_dot_SW_dot_agree_dot_FlightPattern_dot_ZigZag']]}, {'name': 'recv_map_in.direction', 'type': 'iml_dot_systems_dot_Direction', 'class': 'input', 'instantValues': [[0, 'iml_dot_systems_dot_Direction_dot_IN']]}, {'name': 'recv_map_in.event', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False]]}, {'name': 'send_status_out.data.alt', 'type': 'int', 'class': 'output', 'instantValues': [[0, 0]]}, {'name': 'send_status_out.data.lat', 'type': 'int', 'class': 'output', 'instantValues': [[0, 0]]}, {'name': 'send_status_out.data.long', 'type': 'int', 'class': 'output', 'instantValues': [[0, 0]]}, {'name': 'send_status_out.direction', 'type': 'iml_dot_systems_dot_Direction', 'class': 'output', 'instantValues': [[0, 'iml_dot_systems_dot_Direction_dot_IN']]}, {'name': 'send_status_out.event', 'type': 'bool', 'class': 'output', 'instantValues': [[0, False]]}, {'name': 'recv_map_out.data.HMAC', 'type': 'bool', 'class': 'output', 'instantValues': [[0, True]]}, {'name': 'recv_map_out.data.Map.wp1.alt', 'type': 'int', 'class': 'output', 'instantValues': [[0, 15001]]}, {'name': 'recv_map_out.data.Map.wp1.lat', 'type': 'int', 'class': 'output', 'instantValues': [[0, 91]]}, {'name': 'recv_map_out.data.Map.wp1.long', 'type': 'int', 'class': 'output', 'instantValues': [[0, 181]]}, {'name': 'recv_map_out.data.Map.wp2.alt', 'type': 'int', 'class': 'output', 'instantValues': [[0, 15001]]}, {'name': 'recv_map_out.data.Map.wp2.lat', 'type': 'int', 'class': 'output', 'instantValues': [[0, 91]]}, {'name': 'recv_map_out.data.Map.wp2.long', 'type': 'int', 'class': 'output', 'instantValues': [[0, 181]]}, {'name': 'recv_map_out.data.Map.wp3.alt', 'type': 'int', 'class': 'output', 'instantValues': [[0, 15001]]}, {'name': 'recv_map_out.data.Map.wp3.lat', 'type': 'int', 'class': 'output', 'instantValues': [[0, 91]]}, {'name': 'recv_map_out.data.Map.wp3.long', 'type': 'int', 'class': 'output', 'instantValues': [[0, 181]]}, {'name': 'recv_map_out.data.Map.wp4.alt', 'type': 'int', 'class': 'output', 'instantValues': [[0, 15001]]}, {'name': 'recv_map_out.data.Map.wp4.lat', 'type': 'int', 'class': 'output', 'instantValues': [[0, 91]]}, {'name': 'recv_map_out.data.Map.wp4.long', 'type': 'int', 'class': 'output', 'instantValues': [[0, 181]]}, {'name': 'recv_map_out.data.Pattern', 'type': 'examples_dot_SW_dot_agree_dot_FlightPattern', 'class': 'output', 'instantValues': [[0, 'examples_dot_SW_dot_agree_dot_FlightPattern_dot_ZigZag']]}, {'name': 'recv_map_out.direction', 'type': 'iml_dot_systems_dot_Direction', 'class': 'output', 'instantValues': [[0, 'iml_dot_systems_dot_Direction_dot_IN']]}, {'name': 'recv_map_out.event', 'type': 'bool', 'class': 'output', 'instantValues': [[0, False]]}]}, {'blockType': 'node', 'name': 'examples_dot_SW_dot_agree_dot_FlightPlanner', 'streams': [{'name': 'recv_map.data.HMAC', 'type': 'bool', 'class': 'input', 'instantValues': [[0, True]]}, {'name': 'recv_map.data.Map.wp1.alt', 'type': 'int', 'class': 'input', 'instantValues': [[0, 15001]]}, {'name': 'recv_map.data.Map.wp1.lat', 'type': 'int', 'class': 'input', 'instantValues': [[0, 91]]}, {'name': 'recv_map.data.Map.wp1.long', 'type': 'int', 'class': 'input', 'instantValues': [[0, 181]]}, {'name': 'recv_map.data.Map.wp2.alt', 'type': 'int', 'class': 'input', 'instantValues': [[0, 15001]]}, {'name': 'recv_map.data.Map.wp2.lat', 'type': 'int', 'class': 'input', 'instantValues': [[0, 91]]}, {'name': 'recv_map.data.Map.wp2.long', 'type': 'int', 'class': 'input', 'instantValues': [[0, 181]]}, {'name': 'recv_map.data.Map.wp3.alt', 'type': 'int', 'class': 'input', 'instantValues': [[0, 15001]]}, {'name': 'recv_map.data.Map.wp3.lat', 'type': 'int', 'class': 'input', 'instantValues': [[0, 91]]}, {'name': 'recv_map.data.Map.wp3.long', 'type': 'int', 'class': 'input', 'instantValues': [[0, 181]]}, {'name': 'recv_map.data.Map.wp4.alt', 'type': 'int', 'class': 'input', 'instantValues': [[0, 15001]]}, {'name': 'recv_map.data.Map.wp4.lat', 'type': 'int', 'class': 'input', 'instantValues': [[0, 91]]}, {'name': 'recv_map.data.Map.wp4.long', 'type': 'int', 'class': 'input', 'instantValues': [[0, 181]]}, {'name': 'recv_map.data.Pattern', 'type': 'examples_dot_SW_dot_agree_dot_FlightPattern', 'class': 'input', 'instantValues': [[0, 'examples_dot_SW_dot_agree_dot_FlightPattern_dot_ZigZag']]}, {'name': 'recv_map.direction', 'type': 'iml_dot_systems_dot_Direction', 'class': 'input', 'instantValues': [[0, 'iml_dot_systems_dot_Direction_dot_IN']]}, {'name': 'recv_map.event', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False]]}, {'name': 'position_status.data.alt', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0]]}, {'name': 'position_status.data.lat', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0]]}, {'name': 'position_status.data.long', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0]]}, {'name': 'position_status.direction', 'type': 'iml_dot_systems_dot_Direction', 'class': 'input', 'instantValues': [[0, 'iml_dot_systems_dot_Direction_dot_IN']]}, {'name': 'position_status.event', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False]]}, {'name': 'flight_plan.data.wp1.alt', 'type': 'int', 'class': 'output', 'instantValues': [[0, 15001]]}, {'name': 'flight_plan.data.wp1.lat', 'type': 'int', 'class': 'output', 'instantValues': [[0, 91]]}, {'name': 'flight_plan.data.wp1.long', 'type': 'int', 'class': 'output', 'instantValues': [[0, 181]]}, {'name': 'flight_plan.data.wp10.alt', 'type': 'int', 'class': 'output', 'instantValues': [[0, 15001]]}, {'name': 'flight_plan.data.wp10.lat', 'type': 'int', 'class': 'output', 'instantValues': [[0, 91]]}, {'name': 'flight_plan.data.wp10.long', 'type': 'int', 'class': 'output', 'instantValues': [[0, 181]]}, {'name': 'flight_plan.data.wp2.alt', 'type': 'int', 'class': 'output', 'instantValues': [[0, 15001]]}, {'name': 'flight_plan.data.wp2.lat', 'type': 'int', 'class': 'output', 'instantValues': [[0, 91]]}, {'name': 'flight_plan.data.wp2.long', 'type': 'int', 'class': 'output', 'instantValues': [[0, 181]]}, {'name': 'flight_plan.data.wp3.alt', 'type': 'int', 'class': 'output', 'instantValues': [[0, 15001]]}, {'name': 'flight_plan.data.wp3.lat', 'type': 'int', 'class': 'output', 'instantValues': [[0, 91]]}, {'name': 'flight_plan.data.wp3.long', 'type': 'int', 'class': 'output', 'instantValues': [[0, 181]]}, {'name': 'flight_plan.data.wp4.alt', 'type': 'int', 'class': 'output', 'instantValues': [[0, 15001]]}, {'name': 'flight_plan.data.wp4.lat', 'type': 'int', 'class': 'output', 'instantValues': [[0, 91]]}, {'name': 'flight_plan.data.wp4.long', 'type': 'int', 'class': 'output', 'instantValues': [[0, 181]]}, {'name': 'flight_plan.data.wp5.alt', 'type': 'int', 'class': 'output', 'instantValues': [[0, 15001]]}, {'name': 'flight_plan.data.wp5.lat', 'type': 'int', 'class': 'output', 'instantValues': [[0, 91]]}, {'name': 'flight_plan.data.wp5.long', 'type': 'int', 'class': 'output', 'instantValues': [[0, 181]]}, {'name': 'flight_plan.data.wp6.alt', 'type': 'int', 'class': 'output', 'instantValues': [[0, 15001]]}, {'name': 'flight_plan.data.wp6.lat', 'type': 'int', 'class': 'output', 'instantValues': [[0, 91]]}, {'name': 'flight_plan.data.wp6.long', 'type': 'int', 'class': 'output', 'instantValues': [[0, 181]]}, {'name': 'flight_plan.data.wp7.alt', 'type': 'int', 'class': 'output', 'instantValues': [[0, 15001]]}, {'name': 'flight_plan.data.wp7.lat', 'type': 'int', 'class': 'output', 'instantValues': [[0, 91]]}, {'name': 'flight_plan.data.wp7.long', 'type': 'int', 'class': 'output', 'instantValues': [[0, 181]]}, {'name': 'flight_plan.data.wp8.alt', 'type': 'int', 'class': 'output', 'instantValues': [[0, 15001]]}, {'name': 'flight_plan.data.wp8.lat', 'type': 'int', 'class': 'output', 'instantValues': [[0, 91]]}, {'name': 'flight_plan.data.wp8.long', 'type': 'int', 'class': 'output', 'instantValues': [[0, 181]]}, {'name': 'flight_plan.data.wp9.alt', 'type': 'int', 'class': 'output', 'instantValues': [[0, 15001]]}, {'name': 'flight_plan.data.wp9.lat', 'type': 'int', 'class': 'output', 'instantValues': [[0, 91]]}, {'name': 'flight_plan.data.wp9.long', 'type': 'int', 'class': 'output', 'instantValues': [[0, 181]]}, {'name': 'flight_plan.direction', 'type': 'iml_dot_systems_dot_Direction', 'class': 'output', 'instantValues': [[0, 'iml_dot_systems_dot_Direction_dot_IN']]}]}, {'blockType': 'node', 'name': 'examples_dot_SW_dot_agree_dot_WaypointManager', 'streams': [{'name': 'position_status.data.alt', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0]]}, {'name': 'position_status.data.lat', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0]]}, {'name': 'position_status.data.long', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0]]}, {'name': 'position_status.direction', 'type': 'iml_dot_systems_dot_Direction', 'class': 'input', 'instantValues': [[0, 'iml_dot_systems_dot_Direction_dot_IN']]}, {'name': 'position_status.event', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False]]}, {'name': 'flight_plan.data.wp1.alt', 'type': 'int', 'class': 'input', 'instantValues': [[0, 15001]]}, {'name': 'flight_plan.data.wp1.lat', 'type': 'int', 'class': 'input', 'instantValues': [[0, 91]]}, {'name': 'flight_plan.data.wp1.long', 'type': 'int', 'class': 'input', 'instantValues': [[0, 181]]}, {'name': 'flight_plan.data.wp10.alt', 'type': 'int', 'class': 'input', 'instantValues': [[0, 15001]]}, {'name': 'flight_plan.data.wp10.lat', 'type': 'int', 'class': 'input', 'instantValues': [[0, 91]]}, {'name': 'flight_plan.data.wp10.long', 'type': 'int', 'class': 'input', 'instantValues': [[0, 181]]}, {'name': 'flight_plan.data.wp2.alt', 'type': 'int', 'class': 'input', 'instantValues': [[0, 15001]]}, {'name': 'flight_plan.data.wp2.lat', 'type': 'int', 'class': 'input', 'instantValues': [[0, 91]]}, {'name': 'flight_plan.data.wp2.long', 'type': 'int', 'class': 'input', 'instantValues': [[0, 181]]}, {'name': 'flight_plan.data.wp3.alt', 'type': 'int', 'class': 'input', 'instantValues': [[0, 15001]]}, {'name': 'flight_plan.data.wp3.lat', 'type': 'int', 'class': 'input', 'instantValues': [[0, 91]]}, {'name': 'flight_plan.data.wp3.long', 'type': 'int', 'class': 'input', 'instantValues': [[0, 181]]}, {'name': 'flight_plan.data.wp4.alt', 'type': 'int', 'class': 'input', 'instantValues': [[0, 15001]]}, {'name': 'flight_plan.data.wp4.lat', 'type': 'int', 'class': 'input', 'instantValues': [[0, 91]]}, {'name': 'flight_plan.data.wp4.long', 'type': 'int', 'class': 'input', 'instantValues': [[0, 181]]}, {'name': 'flight_plan.data.wp5.alt', 'type': 'int', 'class': 'input', 'instantValues': [[0, 15001]]}, {'name': 'flight_plan.data.wp5.lat', 'type': 'int', 'class': 'input', 'instantValues': [[0, 91]]}, {'name': 'flight_plan.data.wp5.long', 'type': 'int', 'class': 'input', 'instantValues': [[0, 181]]}, {'name': 'flight_plan.data.wp6.alt', 'type': 'int', 'class': 'input', 'instantValues': [[0, 15001]]}, {'name': 'flight_plan.data.wp6.lat', 'type': 'int', 'class': 'input', 'instantValues': [[0, 91]]}, {'name': 'flight_plan.data.wp6.long', 'type': 'int', 'class': 'input', 'instantValues': [[0, 181]]}, {'name': 'flight_plan.data.wp7.alt', 'type': 'int', 'class': 'input', 'instantValues': [[0, 15001]]}, {'name': 'flight_plan.data.wp7.lat', 'type': 'int', 'class': 'input', 'instantValues': [[0, 91]]}, {'name': 'flight_plan.data.wp7.long', 'type': 'int', 'class': 'input', 'instantValues': [[0, 181]]}, {'name': 'flight_plan.data.wp8.alt', 'type': 'int', 'class': 'input', 'instantValues': [[0, 15001]]}, {'name': 'flight_plan.data.wp8.lat', 'type': 'int', 'class': 'input', 'instantValues': [[0, 91]]}, {'name': 'flight_plan.data.wp8.long', 'type': 'int', 'class': 'input', 'instantValues': [[0, 181]]}, {'name': 'flight_plan.data.wp9.alt', 'type': 'int', 'class': 'input', 'instantValues': [[0, 15001]]}, {'name': 'flight_plan.data.wp9.lat', 'type': 'int', 'class': 'input', 'instantValues': [[0, 91]]}, {'name': 'flight_plan.data.wp9.long', 'type': 'int', 'class': 'input', 'instantValues': [[0, 181]]}, {'name': 'flight_plan.direction', 'type': 'iml_dot_systems_dot_Direction', 'class': 'input', 'instantValues': [[0, 'iml_dot_systems_dot_Direction_dot_IN']]}, {'name': 'waypoint.data.crc', 'type': 'bool', 'class': 'output', 'instantValues': [[0, False]]}, {'name': 'waypoint.data.wp1.alt', 'type': 'int', 'class': 'output', 'instantValues': [[0, 15001]]}, {'name': 'waypoint.data.wp1.lat', 'type': 'int', 'class': 'output', 'instantValues': [[0, 91]]}, {'name': 'waypoint.data.wp1.long', 'type': 'int', 'class': 'output', 'instantValues': [[0, 181]]}, {'name': 'waypoint.data.wp2.alt', 'type': 'int', 'class': 'output', 'instantValues': [[0, 15001]]}, {'name': 'waypoint.data.wp2.lat', 'type': 'int', 'class': 'output', 'instantValues': [[0, 91]]}, {'name': 'waypoint.data.wp2.long', 'type': 'int', 'class': 'output', 'instantValues': [[0, 181]]}, {'name': 'waypoint.data.wp3.alt', 'type': 'int', 'class': 'output', 'instantValues': [[0, 15001]]}, {'name': 'waypoint.data.wp3.lat', 'type': 'int', 'class': 'output', 'instantValues': [[0, 91]]}, {'name': 'waypoint.data.wp3.long', 'type': 'int', 'class': 'output', 'instantValues': [[0, 181]]}, {'name': 'waypoint.data.wp4.alt', 'type': 'int', 'class': 'output', 'instantValues': [[0, 15001]]}, {'name': 'waypoint.data.wp4.lat', 'type': 'int', 'class': 'output', 'instantValues': [[0, 91]]}, {'name': 'waypoint.data.wp4.long', 'type': 'int', 'class': 'output', 'instantValues': [[0, 181]]}, {'name': 'waypoint.direction', 'type': 'iml_dot_systems_dot_Direction', 'class': 'output', 'instantValues': [[0, 'iml_dot_systems_dot_Direction_dot_IN']]}, {'name': 'waypoint.event', 'type': 'bool', 'class': 'output', 'instantValues': [[0, False]]}]}, {'blockType': 'node', 'name': 'examples_dot_SW_dot_agree_dot_UARTDriver', 'streams': [{'name': 'waypoint_in.data.crc', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False]]}, {'name': 'waypoint_in.data.wp1.alt', 'type': 'int', 'class': 'input', 'instantValues': [[0, 15001]]}, {'name': 'waypoint_in.data.wp1.lat', 'type': 'int', 'class': 'input', 'instantValues': [[0, 91]]}, {'name': 'waypoint_in.data.wp1.long', 'type': 'int', 'class': 'input', 'instantValues': [[0, 181]]}, {'name': 'waypoint_in.data.wp2.alt', 'type': 'int', 'class': 'input', 'instantValues': [[0, 15001]]}, {'name': 'waypoint_in.data.wp2.lat', 'type': 'int', 'class': 'input', 'instantValues': [[0, 91]]}, {'name': 'waypoint_in.data.wp2.long', 'type': 'int', 'class': 'input', 'instantValues': [[0, 181]]}, {'name': 'waypoint_in.data.wp3.alt', 'type': 'int', 'class': 'input', 'instantValues': [[0, 15001]]}, {'name': 'waypoint_in.data.wp3.lat', 'type': 'int', 'class': 'input', 'instantValues': [[0, 91]]}, {'name': 'waypoint_in.data.wp3.long', 'type': 'int', 'class': 'input', 'instantValues': [[0, 181]]}, {'name': 'waypoint_in.data.wp4.alt', 'type': 'int', 'class': 'input', 'instantValues': [[0, 15001]]}, {'name': 'waypoint_in.data.wp4.lat', 'type': 'int', 'class': 'input', 'instantValues': [[0, 91]]}, {'name': 'waypoint_in.data.wp4.long', 'type': 'int', 'class': 'input', 'instantValues': [[0, 181]]}, {'name': 'waypoint_in.direction', 'type': 'iml_dot_systems_dot_Direction', 'class': 'input', 'instantValues': [[0, 'iml_dot_systems_dot_Direction_dot_IN']]}, {'name': 'waypoint_in.event', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False]]}, {'name': 'position_status_in.data.alt', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0]]}, {'name': 'position_status_in.data.lat', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0]]}, {'name': 'position_status_in.data.long', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0]]}, {'name': 'position_status_in.direction', 'type': 'iml_dot_systems_dot_Direction', 'class': 'input', 'instantValues': [[0, 'iml_dot_systems_dot_Direction_dot_IN']]}, {'name': 'position_status_in.event', 'type': 'bool', 'class': 'input', 'instantValues': [[0, False]]}, {'name': 'position_status_out.data.alt', 'type': 'int', 'class': 'output', 'instantValues': [[0, 0]]}, {'name': 'position_status_out.data.lat', 'type': 'int', 'class': 'output', 'instantValues': [[0, 0]]}, {'name': 'position_status_out.data.long', 'type': 'int', 'class': 'output', 'instantValues': [[0, 0]]}, {'name': 'position_status_out.direction', 'type': 'iml_dot_systems_dot_Direction', 'class': 'output', 'instantValues': [[0, 'iml_dot_systems_dot_Direction_dot_IN']]}, {'name': 'position_status_out.event', 'type': 'bool', 'class': 'output', 'instantValues': [[0, False]]}, {'name': 'waypoint_out.data.crc', 'type': 'bool', 'class': 'output', 'instantValues': [[0, False]]}, {'name': 'waypoint_out.data.wp1.alt', 'type': 'int', 'class': 'output', 'instantValues': [[0, 0]]}, {'name': 'waypoint_out.data.wp1.lat', 'type': 'int', 'class': 'output', 'instantValues': [[0, 0]]}, {'name': 'waypoint_out.data.wp1.long', 'type': 'int', 'class': 'output', 'instantValues': [[0, 0]]}, {'name': 'waypoint_out.data.wp2.alt', 'type': 'int', 'class': 'output', 'instantValues': [[0, 0]]}, {'name': 'waypoint_out.data.wp2.lat', 'type': 'int', 'class': 'output', 'instantValues': [[0, 0]]}, {'name': 'waypoint_out.data.wp2.long', 'type': 'int', 'class': 'output', 'instantValues': [[0, 0]]}, {'name': 'waypoint_out.data.wp3.alt', 'type': 'int', 'class': 'output', 'instantValues': [[0, 0]]}, {'name': 'waypoint_out.data.wp3.lat', 'type': 'int', 'class': 'output', 'instantValues': [[0, 0]]}, {'name': 'waypoint_out.data.wp3.long', 'type': 'int', 'class': 'output', 'instantValues': [[0, 0]]}, {'name': 'waypoint_out.data.wp4.alt', 'type': 'int', 'class': 'output', 'instantValues': [[0, 0]]}, {'name': 'waypoint_out.data.wp4.lat', 'type': 'int', 'class': 'output', 'instantValues': [[0, 0]]}, {'name': 'waypoint_out.data.wp4.long', 'type': 'int', 'class': 'output', 'instantValues': [[0, 0]]}, {'name': 'waypoint_out.direction', 'type': 'iml_dot_systems_dot_Direction', 'class': 'output', 'instantValues': [[0, 'iml_dot_systems_dot_Direction_dot_IN']]}, {'name': 'waypoint_out.event', 'type': 'bool', 'class': 'output', 'instantValues': [[0, False]]}]}]}]}, {'objectType': 'analysisStop'}]";
        return json;
    }


    public static String iml3()
    {
        String json = "[{'objectType': 'kind2Options', 'enabled': ['bmc', 'ind', 'ind2', 'ic3', 'invgents', 'invgenos', 'invgenintos', 'invgenintos'], 'timeout': 1.0, 'bmcMax': 0, 'compositional': True, 'modular': True}, {'objectType': 'log', 'level': 'info', 'source': 'parse', 'value': 'kind2 v1.1.0-488-gcc1e9bd5'}, {'objectType': 'analysisStart', 'top': 'agree_dot_UTRC_Explain_Yes_dot_top_level_dot_Impl', 'concrete': [], 'abstract': ['agree_dot_UTRC_Explain_Yes_dot_C', 'agree_dot_UTRC_Explain_Yes_dot_B', 'agree_dot_UTRC_Explain_Yes_dot_A'], 'assumptions': []}, {'objectType': 'property', 'name': 'guarantee[l26c2][1]', 'scope': 'agree_dot_UTRC_Explain_Yes_dot_top_level_dot_Impl', 'line': 26, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.021}, 'k': 0, 'answer': {'source': 'ic3', 'value': 'falsifiable'}, 'counterExample': [{'blockType': 'node', 'name': 'agree_dot_UTRC_Explain_Yes_dot_top_level_dot_Impl', 'streams': [{'name': 'Input.data', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0]]}, {'name': 'Input.direction', 'type': 'iml_dot_systems_dot_Direction', 'class': 'input', 'instantValues': [[0, 'iml_dot_systems_dot_Direction_dot_IN']]}, {'name': 'Output.data', 'type': 'int', 'class': 'output', 'instantValues': [[0, 55]]}, {'name': 'A_sub_Output.direction', 'type': 'iml_dot_systems_dot_Direction', 'class': 'local', 'instantValues': [[0, 'iml_dot_systems_dot_Direction_dot_IN']]}, {'name': 'A_sub_Output.data', 'type': 'int', 'class': 'local', 'instantValues': [[0, 20]]}, {'name': 'B_sub_Output.direction', 'type': 'iml_dot_systems_dot_Direction', 'class': 'local', 'instantValues': [[0, 'iml_dot_systems_dot_Direction_dot_IN']]}, {'name': 'B_sub_Output.data', 'type': 'int', 'class': 'local', 'instantValues': [[0, 35]]}], 'subnodes': [{'blockType': 'node', 'name': 'agree_dot_UTRC_Explain_Yes_dot_B', 'streams': [{'name': 'Input.data', 'type': 'int', 'class': 'input', 'instantValues': [[0, 20]]}, {'name': 'Input.direction', 'type': 'iml_dot_systems_dot_Direction', 'class': 'input', 'instantValues': [[0, 'iml_dot_systems_dot_Direction_dot_IN']]}, {'name': 'Output.data', 'type': 'int', 'class': 'output', 'instantValues': [[0, 35]]}, {'name': 'Output.direction', 'type': 'iml_dot_systems_dot_Direction', 'class': 'output', 'instantValues': [[0, 'iml_dot_systems_dot_Direction_dot_IN']]}]}, {'blockType': 'node', 'name': 'agree_dot_UTRC_Explain_Yes_dot_A', 'streams': [{'name': 'Input.data', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0]]}, {'name': 'Input.direction', 'type': 'iml_dot_systems_dot_Direction', 'class': 'input', 'instantValues': [[0, 'iml_dot_systems_dot_Direction_dot_IN']]}, {'name': 'Output.data', 'type': 'int', 'class': 'output', 'instantValues': [[0, 20]]}, {'name': 'Output.direction', 'type': 'iml_dot_systems_dot_Direction', 'class': 'output', 'instantValues': [[0, 'iml_dot_systems_dot_Direction_dot_IN']]}]}, {'blockType': 'node', 'name': 'agree_dot_UTRC_Explain_Yes_dot_C', 'streams': [{'name': 'Input1.data', 'type': 'int', 'class': 'input', 'instantValues': [[0, 20]]}, {'name': 'Input1.direction', 'type': 'iml_dot_systems_dot_Direction', 'class': 'input', 'instantValues': [[0, 'iml_dot_systems_dot_Direction_dot_IN']]}, {'name': 'Input2.data', 'type': 'int', 'class': 'input', 'instantValues': [[0, 35]]}, {'name': 'Input2.direction', 'type': 'iml_dot_systems_dot_Direction', 'class': 'input', 'instantValues': [[0, 'iml_dot_systems_dot_Direction_dot_IN']]}, {'name': 'Output.data', 'type': 'int', 'class': 'output', 'instantValues': [[0, 55]]}, {'name': 'Output.direction', 'type': 'iml_dot_systems_dot_Direction', 'class': 'output', 'instantValues': [[0, 'iml_dot_systems_dot_Direction_dot_IN']]}]}]}]}, {'objectType': 'property', 'name': 'agree_dot_UTRC_Explain_Yes_dot_A[l32c19].assume[l64c2][1]', 'scope': 'agree_dot_UTRC_Explain_Yes_dot_A', 'line': 64, 'column': 2, 'source': 'Assumption', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.021}, 'k': 0, 'answer': {'source': 'ic3', 'value': 'falsifiable'}, 'counterExample': [{'blockType': 'node', 'name': 'agree_dot_UTRC_Explain_Yes_dot_top_level_dot_Impl', 'streams': [{'name': 'Input.data', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0]]}, {'name': 'Input.direction', 'type': 'iml_dot_systems_dot_Direction', 'class': 'input', 'instantValues': [[0, 'iml_dot_systems_dot_Direction_dot_IN']]}, {'name': 'Output.data', 'type': 'int', 'class': 'output', 'instantValues': [[0, 55]]}, {'name': 'A_sub_Output.direction', 'type': 'iml_dot_systems_dot_Direction', 'class': 'local', 'instantValues': [[0, 'iml_dot_systems_dot_Direction_dot_IN']]}, {'name': 'A_sub_Output.data', 'type': 'int', 'class': 'local', 'instantValues': [[0, 20]]}, {'name': 'B_sub_Output.direction', 'type': 'iml_dot_systems_dot_Direction', 'class': 'local', 'instantValues': [[0, 'iml_dot_systems_dot_Direction_dot_IN']]}, {'name': 'B_sub_Output.data', 'type': 'int', 'class': 'local', 'instantValues': [[0, 35]]}], 'subnodes': [{'blockType': 'node', 'name': 'agree_dot_UTRC_Explain_Yes_dot_B', 'streams': [{'name': 'Input.data', 'type': 'int', 'class': 'input', 'instantValues': [[0, 20]]}, {'name': 'Input.direction', 'type': 'iml_dot_systems_dot_Direction', 'class': 'input', 'instantValues': [[0, 'iml_dot_systems_dot_Direction_dot_IN']]}, {'name': 'Output.data', 'type': 'int', 'class': 'output', 'instantValues': [[0, 35]]}, {'name': 'Output.direction', 'type': 'iml_dot_systems_dot_Direction', 'class': 'output', 'instantValues': [[0, 'iml_dot_systems_dot_Direction_dot_IN']]}]}, {'blockType': 'node', 'name': 'agree_dot_UTRC_Explain_Yes_dot_A', 'streams': [{'name': 'Input.data', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0]]}, {'name': 'Input.direction', 'type': 'iml_dot_systems_dot_Direction', 'class': 'input', 'instantValues': [[0, 'iml_dot_systems_dot_Direction_dot_IN']]}, {'name': 'Output.data', 'type': 'int', 'class': 'output', 'instantValues': [[0, 20]]}, {'name': 'Output.direction', 'type': 'iml_dot_systems_dot_Direction', 'class': 'output', 'instantValues': [[0, 'iml_dot_systems_dot_Direction_dot_IN']]}]}, {'blockType': 'node', 'name': 'agree_dot_UTRC_Explain_Yes_dot_C', 'streams': [{'name': 'Input1.data', 'type': 'int', 'class': 'input', 'instantValues': [[0, 20]]}, {'name': 'Input1.direction', 'type': 'iml_dot_systems_dot_Direction', 'class': 'input', 'instantValues': [[0, 'iml_dot_systems_dot_Direction_dot_IN']]}, {'name': 'Input2.data', 'type': 'int', 'class': 'input', 'instantValues': [[0, 35]]}, {'name': 'Input2.direction', 'type': 'iml_dot_systems_dot_Direction', 'class': 'input', 'instantValues': [[0, 'iml_dot_systems_dot_Direction_dot_IN']]}, {'name': 'Output.data', 'type': 'int', 'class': 'output', 'instantValues': [[0, 55]]}, {'name': 'Output.direction', 'type': 'iml_dot_systems_dot_Direction', 'class': 'output', 'instantValues': [[0, 'iml_dot_systems_dot_Direction_dot_IN']]}]}]}]}, {'objectType': 'property', 'name': 'agree_dot_UTRC_Explain_Yes_dot_B[l34c19].assume[l45c2][1]', 'scope': 'agree_dot_UTRC_Explain_Yes_dot_B', 'line': 45, 'column': 2, 'source': 'Assumption', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.021}, 'k': 0, 'answer': {'source': 'ic3', 'value': 'falsifiable'}, 'counterExample': [{'blockType': 'node', 'name': 'agree_dot_UTRC_Explain_Yes_dot_top_level_dot_Impl', 'streams': [{'name': 'Input.data', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0]]}, {'name': 'Input.direction', 'type': 'iml_dot_systems_dot_Direction', 'class': 'input', 'instantValues': [[0, 'iml_dot_systems_dot_Direction_dot_IN']]}, {'name': 'Output.data', 'type': 'int', 'class': 'output', 'instantValues': [[0, 55]]}, {'name': 'A_sub_Output.direction', 'type': 'iml_dot_systems_dot_Direction', 'class': 'local', 'instantValues': [[0, 'iml_dot_systems_dot_Direction_dot_IN']]}, {'name': 'A_sub_Output.data', 'type': 'int', 'class': 'local', 'instantValues': [[0, 20]]}, {'name': 'B_sub_Output.direction', 'type': 'iml_dot_systems_dot_Direction', 'class': 'local', 'instantValues': [[0, 'iml_dot_systems_dot_Direction_dot_IN']]}, {'name': 'B_sub_Output.data', 'type': 'int', 'class': 'local', 'instantValues': [[0, 35]]}], 'subnodes': [{'blockType': 'node', 'name': 'agree_dot_UTRC_Explain_Yes_dot_B', 'streams': [{'name': 'Input.data', 'type': 'int', 'class': 'input', 'instantValues': [[0, 20]]}, {'name': 'Input.direction', 'type': 'iml_dot_systems_dot_Direction', 'class': 'input', 'instantValues': [[0, 'iml_dot_systems_dot_Direction_dot_IN']]}, {'name': 'Output.data', 'type': 'int', 'class': 'output', 'instantValues': [[0, 35]]}, {'name': 'Output.direction', 'type': 'iml_dot_systems_dot_Direction', 'class': 'output', 'instantValues': [[0, 'iml_dot_systems_dot_Direction_dot_IN']]}]}, {'blockType': 'node', 'name': 'agree_dot_UTRC_Explain_Yes_dot_A', 'streams': [{'name': 'Input.data', 'type': 'int', 'class': 'input', 'instantValues': [[0, 0]]}, {'name': 'Input.direction', 'type': 'iml_dot_systems_dot_Direction', 'class': 'input', 'instantValues': [[0, 'iml_dot_systems_dot_Direction_dot_IN']]}, {'name': 'Output.data', 'type': 'int', 'class': 'output', 'instantValues': [[0, 20]]}, {'name': 'Output.direction', 'type': 'iml_dot_systems_dot_Direction', 'class': 'output', 'instantValues': [[0, 'iml_dot_systems_dot_Direction_dot_IN']]}]}, {'blockType': 'node', 'name': 'agree_dot_UTRC_Explain_Yes_dot_C', 'streams': [{'name': 'Input1.data', 'type': 'int', 'class': 'input', 'instantValues': [[0, 20]]}, {'name': 'Input1.direction', 'type': 'iml_dot_systems_dot_Direction', 'class': 'input', 'instantValues': [[0, 'iml_dot_systems_dot_Direction_dot_IN']]}, {'name': 'Input2.data', 'type': 'int', 'class': 'input', 'instantValues': [[0, 35]]}, {'name': 'Input2.direction', 'type': 'iml_dot_systems_dot_Direction', 'class': 'input', 'instantValues': [[0, 'iml_dot_systems_dot_Direction_dot_IN']]}, {'name': 'Output.data', 'type': 'int', 'class': 'output', 'instantValues': [[0, 55]]}, {'name': 'Output.direction', 'type': 'iml_dot_systems_dot_Direction', 'class': 'output', 'instantValues': [[0, 'iml_dot_systems_dot_Direction_dot_IN']]}]}]}]}, {'objectType': 'analysisStop'}]";
        return json;
    }

    public static String bacteria1()
    {
        String json = "[{'objectType': 'kind2Options', 'enabled': ['bmc', 'ind', 'ind2', 'ic3', 'invgents', 'invgenos', 'invgenintos', 'invgenintos'], 'timeout': 5.0, 'bmcMax': 0, 'compositional': True, 'modular': True}, {'objectType': 'log', 'level': 'info', 'source': 'parse', 'value': 'kind2 v1.1.0-486-g3e68273a'}, {'objectType': 'log', 'level': 'note', 'source': 'parse', 'value': 'System sofar has no property, skipping verification step.'}, {'objectType': 'log', 'level': 'note', 'source': 'parse', 'value': 'System hasHappened has no property, skipping verification step.'}, {'objectType': 'log', 'level': 'note', 'source': 'parse', 'value': 'System first has no property, skipping verification step.'}, {'objectType': 'analysisStart', 'top': 'bacteriaPopulation', 'concrete': ['sofar', 'hasHappened', 'first'], 'abstract': [], 'assumptions': [['first', 1]]}, {'objectType': 'property', 'name': 'bacteriaPopulationSpec._one_mode_active', 'scope': 'bacteriaPopulation', 'line': 57, 'column': 3, 'source': 'OneModeActive', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.032}, 'answer': {'source': 'ic3', 'value': 'valid'}}, {'objectType': 'analysisStop'}, {'objectType': 'analysisStart', 'top': 'bacteriaPopulation', 'concrete': ['sofar', 'hasHappened', 'first'], 'abstract': [], 'assumptions': [['first', 1]]}, {'objectType': 'property', 'name': 'bacteriaPopulationSpec[l90c12].stable.ensure[l80c4][1]', 'scope': 'bacteriaPopulation', 'line': 80, 'column': 4, 'source': 'Ensure', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.042}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'bacteriaPopulationSpec[l90c12].decreasing.ensure[l72c4][1]', 'scope': 'bacteriaPopulation', 'line': 72, 'column': 4, 'source': 'Ensure', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.042}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'bacteriaPopulationSpec[l90c12].guarantee[l39c3][2]', 'scope': 'bacteriaPopulation', 'line': 39, 'column': 3, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.042}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'bacteriaPopulationSpec[l90c12].guarantee[l52c3][4]', 'scope': 'bacteriaPopulation', 'line': 52, 'column': 3, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.052}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'bacteriaPopulationSpec[l90c12].guarantee[l44c3][3]', 'scope': 'bacteriaPopulation', 'line': 44, 'column': 3, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.052}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'bacteriaPopulationSpec[l90c12].guarantee[l36c3][1]', 'scope': 'bacteriaPopulation', 'line': 36, 'column': 3, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.052}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'bacteriaPopulationSpec[l90c12].increasing.ensure[l63c4][1]', 'scope': 'bacteriaPopulation', 'line': 63, 'column': 4, 'source': 'Ensure', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.052}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'analysisStop'}]";
        return json;
    }

    public static String bacteria2OneModeActiveFalsified()
    {
        String json = "[{'objectType': 'kind2Options', 'enabled': ['bmc', 'ind', 'ind2', 'ic3', 'invgents', 'invgenos', 'invgenintos', 'invgenintos'], 'timeout': 5.0, 'bmcMax': 0, 'compositional': True, 'modular': True}, {'objectType': 'log', 'level': 'info', 'source': 'parse', 'value': 'kind2 v1.1.0-486-g3e68273a'}, {'objectType': 'log', 'level': 'note', 'source': 'parse', 'value': 'System sofar has no property, skipping verification step.'}, {'objectType': 'log', 'level': 'note', 'source': 'parse', 'value': 'System hasHappened has no property, skipping verification step.'}, {'objectType': 'log', 'level': 'note', 'source': 'parse', 'value': 'System first has no property, skipping verification step.'}, {'objectType': 'analysisStart', 'top': 'bacteriaPopulation', 'concrete': ['sofar', 'hasHappened', 'first'], 'abstract': [], 'assumptions': [['first', 1]]}, {'objectType': 'property', 'name': 'bacteriaPopulationSpec._one_mode_active', 'scope': 'bacteriaPopulation', 'line': 57, 'column': 3, 'source': 'OneModeActive', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.022}, 'k': 1, 'answer': {'source': 'ic3', 'value': 'falsifiable'}, 'counterExample': [{'blockType': 'node', 'name': 'bacteriaPopulation', 'activeModes': [{'instant': '0', 'topModes': [], 'contractModes': [{'contract': 'bacteriaPopulationSpec', 'modes': ['increasing', 'decreasing'], 'subcontractModes': []}]}, {'instant': '1', 'topModes': [], 'contractModes': []}], 'streams': [{'name': 'population', 'type': 'real', 'class': 'output', 'instantValues': [[0, 32], [1, 32]]}]}]}, {'objectType': 'analysisStop'}, {'objectType': 'analysisStart', 'top': 'bacteriaPopulation', 'concrete': ['sofar', 'hasHappened', 'first'], 'abstract': [], 'assumptions': [['first', 1]]}, {'objectType': 'property', 'name': 'bacteriaPopulationSpec[l83c12].guarantee[l52c3][4]', 'scope': 'bacteriaPopulation', 'line': 52, 'column': 3, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.053}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'bacteriaPopulationSpec[l83c12].guarantee[l44c3][3]', 'scope': 'bacteriaPopulation', 'line': 44, 'column': 3, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.053}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'bacteriaPopulationSpec[l83c12].guarantee[l36c3][1]', 'scope': 'bacteriaPopulation', 'line': 36, 'column': 3, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.053}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'bacteriaPopulationSpec[l83c12].increasing.ensure[l63c4][1]', 'scope': 'bacteriaPopulation', 'line': 63, 'column': 4, 'source': 'Ensure', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.053}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'bacteriaPopulationSpec[l83c12].guarantee[l39c3][2]', 'scope': 'bacteriaPopulation', 'line': 39, 'column': 3, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.053}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'bacteriaPopulationSpec[l83c12].decreasing.ensure[l72c4][1]', 'scope': 'bacteriaPopulation', 'line': 72, 'column': 4, 'source': 'Ensure', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.053}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'analysisStop'}]";
        return json;
    }

    public static String cruiseController()
    {
        String json = "[{'objectType': 'kind2Options', 'enabled': ['bmc', 'ind', 'ind2', 'ic3', 'invgents', 'invgenos', 'invgenintos', 'invgenintos'], 'timeout': 5.0, 'bmcMax': 0, 'compositional': True, 'modular': True}, {'objectType': 'log', 'level': 'info', 'source': 'parse', 'value': 'kind2 v1.1.0-486-g3e68273a'}, {'objectType': 'log', 'level': 'note', 'source': 'parse', 'value': 'System Max has no property, skipping verification step.'}, {'objectType': 'log', 'level': 'note', 'source': 'parse', 'value': 'System ToInt has no property, skipping verification step.'}, {'objectType': 'log', 'level': 'note', 'source': 'parse', 'value': 'System UnchangedReal has no property, skipping verification step.'}, {'objectType': 'log', 'level': 'note', 'source': 'parse', 'value': 'System InitiallyHolds has no property, skipping verification step.'}, {'objectType': 'analysisStart', 'top': 'CruiseControllerSystem_Impl', 'concrete': ['UnchangedReal', 'ToInt', 'Max', 'InitiallyHolds'], 'abstract': ['SetSpeed', 'ControlSpeed'], 'assumptions': [['InitiallyHolds', 1]]}, {'objectType': 'property', 'name': '2. Cruise Controller System is disabled initially[2]', 'scope': 'CruiseControllerSystem_Impl', 'line': 100, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.062}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'SetSpeed[l113c55].assume[l62c2][1]', 'scope': 'SetSpeed', 'line': 62, 'column': 2, 'source': 'Assumption', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.062}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'SetSpeed[l113c55].assume[l63c2][2]', 'scope': 'SetSpeed', 'line': 63, 'column': 2, 'source': 'Assumption', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.062}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'ControlSpeed[l114c28].assume[l77c2][1]', 'scope': 'ControlSpeed', 'line': 77, 'column': 2, 'source': 'Assumption', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.062}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': '7. Force is zero if Cruise Controller System is enabled and the desired speed is not greater than the current speed[7]', 'scope': 'CruiseControllerSystem_Impl', 'line': 105, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.506}, 'answer': {'source': 'invgenos', 'value': 'valid'}}, {'objectType': 'property', 'name': '8. Force is positive if Cruise Controller System is enabled and the desired speed is greater than the current speed[8]', 'scope': 'CruiseControllerSystem_Impl', 'line': 106, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.506}, 'answer': {'source': 'invgenos', 'value': 'valid'}}, {'objectType': 'property', 'name': '3. When Cruise Controller System is disabled, the desired speed does not get changed[3]', 'scope': 'CruiseControllerSystem_Impl', 'line': 101, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.577}, 'answer': {'source': 'ind2', 'value': 'valid'}}, {'objectType': 'property', 'name': '4. When Cruise Controller System is enabled and speed increase request does not exceed the maximum cruise controller speed, the desired speed is then increased accordingly[4]', 'scope': 'CruiseControllerSystem_Impl', 'line': 102, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.577}, 'answer': {'source': 'ind2', 'value': 'valid'}}, {'objectType': 'property', 'name': '5. When Cruise Controller System is enabled and speed decrease request does not make desired speed become less than the minimum cruise controller speed, the desired speed is then decreased accordingly[5]', 'scope': 'CruiseControllerSystem_Impl', 'line': 103, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.577}, 'answer': {'source': 'ind2', 'value': 'valid'}}, {'objectType': 'property', 'name': '6. When Cruise Controller System is enabled and no button is pressed, the desired speed does not get changed[6]', 'scope': 'CruiseControllerSystem_Impl', 'line': 104, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.577}, 'answer': {'source': 'ind2', 'value': 'valid'}}, {'objectType': 'property', 'name': '1. Cruise Controller System is enabled only if desired speed is within Cruise Controller minimum and maximun speed[1]', 'scope': 'CruiseControllerSystem_Impl', 'line': 99, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 1.558}, 'answer': {'source': 'invgenos', 'value': 'valid'}}, {'objectType': 'analysisStop'}]";
        return json;
    }


    public static String thermostat()
    {
        String json = "[{'objectType': 'kind2Options', 'enabled': ['bmc', 'ind', 'ind2', 'ic3', 'invgents', 'invgenos', 'invgenintos', 'invgenintos'], 'timeout': 5.0, 'bmcMax': 0, 'compositional': True, 'modular': True}, {'objectType': 'log', 'level': 'info', 'source': 'parse', 'value': 'kind2 v1.1.0-486-g3e68273a'}, {'objectType': 'log', 'level': 'note', 'source': 'parse', 'value': 'System Since has no property, skipping verification step.'}, {'objectType': 'analysisStart', 'top': 'ThermostatController_Impl', 'concrete': ['Since'], 'abstract': ['SetDesiredTemperature', 'ControlTemperature'], 'assumptions': [['Since', 1]]}, {'objectType': 'property', 'name': 'Initial temperature is in range[1]', 'scope': 'ThermostatController_Impl', 'line': 64, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.055}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'Deadband and Diff are positive values[2]', 'scope': 'ThermostatController_Impl', 'line': 65, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.055}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'No activation signal is enabled if switch is in Off[3]', 'scope': 'ThermostatController_Impl', 'line': 66, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.055}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'Cooling system is turned On only if switch is in Cool[4]', 'scope': 'ThermostatController_Impl', 'line': 67, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.055}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'Heating system is turned On only if switch is in Heat[5]', 'scope': 'ThermostatController_Impl', 'line': 68, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.055}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'Activation signals are never enabled at the same time[6]', 'scope': 'ThermostatController_Impl', 'line': 69, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.055}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'Cooling system is On only if current temperature is higher than setpoint[12]', 'scope': 'ThermostatController_Impl', 'line': 75, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.055}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'Heating system is On only if current temperature is lower than setpoint[13]', 'scope': 'ThermostatController_Impl', 'line': 76, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.055}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'Cooling system is On if switch is in Cool and temperature is higher than setpoint plus deadband[14]', 'scope': 'ThermostatController_Impl', 'line': 77, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.055}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'Heating system is On if switch is in Heat and temperature is lower than setpoint minus deadband[15]', 'scope': 'ThermostatController_Impl', 'line': 78, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.055}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'SetDesiredTemperature[l87c42].assume[l28c2][1]', 'scope': 'SetDesiredTemperature', 'line': 28, 'column': 2, 'source': 'Assumption', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.055}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': \"Once heating system is On, it remains On as long as setpoint hasn't reached and switch is in Heat[17]\", 'scope': 'ThermostatController_Impl', 'line': 80, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.076}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'System is Off if current temperature is in the dead zone and system was Off in the previous step[11]', 'scope': 'ThermostatController_Impl', 'line': 74, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.076}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': \"Once cooling system is On, it remains On as long as setpoint hasn't reached and switch is in Cool[16]\", 'scope': 'ThermostatController_Impl', 'line': 79, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.076}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': \"Setpoint doesn't increase if the down button is pressed[10]\", 'scope': 'ThermostatController_Impl', 'line': 73, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.239}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': \"Setpoint doesn't decrease if the up button is pressed[9]\", 'scope': 'ThermostatController_Impl', 'line': 72, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.239}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': 'Setpoint is always in range[7]', 'scope': 'ThermostatController_Impl', 'line': 70, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.239}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'property', 'name': \"Setpoint doesn't change if no button is pressed[8]\", 'scope': 'ThermostatController_Impl', 'line': 71, 'column': 2, 'source': 'Guarantee', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.239}, 'answer': {'source': 'ind', 'value': 'valid'}}, {'objectType': 'analysisStop'}]";
        return json;
    }

    public static String array()
    {
        String json = "[{'objectType': 'kind2Options', 'enabled': ['bmc', 'ind', 'ind2', 'ic3', 'invgents', 'invgenos', 'invgenintos', 'invgenintos'], 'timeout': 5.0, 'bmcMax': 0, 'compositional': True, 'modular': True}, {'objectType': 'log', 'level': 'info', 'source': 'parse', 'value': 'kind2 v1.1.0-488-gcc1e9bd5'}, {'objectType': 'analysisStart', 'top': 'slide', 'concrete': [], 'abstract': [], 'assumptions': []}, {'objectType': 'property', 'name': '((n > 1) => (true -> (A[1] = (pre s))))', 'line': 4, 'column': 4, 'source': 'PropAnnot', 'runtime': {'unit': 'sec', 'timeout': False, 'value': 0.031}, 'k': 1, 'answer': {'source': 'ic3', 'value': 'falsifiable'}, 'counterExample': [{'blockType': 'node', 'name': 'slide', 'streams': [{'name': 'n', 'type': 'int', 'class': 'input', 'instantValues': [[0, 2], [1, 2]]}, {'name': 's', 'type': 'int', 'class': 'input', 'instantValues': [[0, 3], [1, 4]]}, {'name': 'A', 'type': 'array of int', 'class': 'output', 'instantValues': [[0, [3, -1]], [1, [4, -1]]]}]}]}, {'objectType': 'analysisStop'}]";
        return json;
    }

    public static String stopWatchUnknown()
    {
        try
        {
            ClassLoader classLoader = Main.class.getClassLoader();
            String json = new String(Files.readAllBytes(Paths.get(classLoader.getResource("files/S1Uknown.json").toURI())));
            return json;
        }
        catch (IOException | URISyntaxException e)
        {
        }

        return "";
    }
}
